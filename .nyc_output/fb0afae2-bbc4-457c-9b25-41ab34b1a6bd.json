{"/Users/yexuanjiang/project_team129/src/rest/Server.ts":{"path":"/Users/yexuanjiang/project_team129/src/rest/Server.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":18},"end":{"line":6,"column":53}},"4":{"start":{"line":7,"column":15},"end":{"line":7,"column":47}},"5":{"start":{"line":8,"column":24},"end":{"line":8,"column":79}},"6":{"start":{"line":9,"column":25},"end":{"line":9,"column":64}},"7":{"start":{"line":12,"column":8},"end":{"line":12,"column":50}},"8":{"start":{"line":13,"column":8},"end":{"line":13,"column":25}},"9":{"start":{"line":14,"column":8},"end":{"line":14,"column":48}},"10":{"start":{"line":15,"column":8},"end":{"line":15,"column":34}},"11":{"start":{"line":16,"column":8},"end":{"line":16,"column":30}},"12":{"start":{"line":17,"column":8},"end":{"line":17,"column":59}},"13":{"start":{"line":20,"column":8},"end":{"line":35,"column":11}},"14":{"start":{"line":21,"column":12},"end":{"line":21,"column":52}},"15":{"start":{"line":22,"column":12},"end":{"line":34,"column":13}},"16":{"start":{"line":23,"column":16},"end":{"line":23,"column":76}},"17":{"start":{"line":24,"column":16},"end":{"line":24,"column":25}},"18":{"start":{"line":27,"column":16},"end":{"line":33,"column":19}},"19":{"start":{"line":28,"column":20},"end":{"line":28,"column":93}},"20":{"start":{"line":29,"column":20},"end":{"line":29,"column":30}},"21":{"start":{"line":31,"column":20},"end":{"line":31,"column":84}},"22":{"start":{"line":32,"column":20},"end":{"line":32,"column":32}},"23":{"start":{"line":38,"column":8},"end":{"line":38,"column":39}},"24":{"start":{"line":39,"column":8},"end":{"line":50,"column":11}},"25":{"start":{"line":40,"column":12},"end":{"line":49,"column":13}},"26":{"start":{"line":41,"column":16},"end":{"line":41,"column":76}},"27":{"start":{"line":42,"column":16},"end":{"line":42,"column":25}},"28":{"start":{"line":45,"column":16},"end":{"line":48,"column":19}},"29":{"start":{"line":46,"column":20},"end":{"line":46,"column":67}},"30":{"start":{"line":47,"column":20},"end":{"line":47,"column":30}},"31":{"start":{"line":53,"column":8},"end":{"line":53,"column":51}},"32":{"start":{"line":54,"column":8},"end":{"line":54,"column":90}},"33":{"start":{"line":55,"column":8},"end":{"line":55,"column":48}},"34":{"start":{"line":58,"column":8},"end":{"line":58,"column":52}},"35":{"start":{"line":59,"column":8},"end":{"line":59,"column":57}},"36":{"start":{"line":60,"column":8},"end":{"line":60,"column":57}},"37":{"start":{"line":61,"column":8},"end":{"line":61,"column":47}},"38":{"start":{"line":62,"column":8},"end":{"line":62,"column":48}},"39":{"start":{"line":65,"column":19},"end":{"line":65,"column":32}},"40":{"start":{"line":66,"column":22},"end":{"line":66,"column":62}},"41":{"start":{"line":67,"column":21},"end":{"line":67,"column":36}},"42":{"start":{"line":68,"column":8},"end":{"line":88,"column":9}},"43":{"start":{"line":69,"column":12},"end":{"line":83,"column":13}},"44":{"start":{"line":70,"column":16},"end":{"line":70,"column":37}},"45":{"start":{"line":71,"column":24},"end":{"line":71,"column":53}},"46":{"start":{"line":72,"column":16},"end":{"line":74,"column":19}},"47":{"start":{"line":73,"column":20},"end":{"line":73,"column":58}},"48":{"start":{"line":76,"column":17},"end":{"line":83,"column":13}},"49":{"start":{"line":77,"column":16},"end":{"line":77,"column":39}},"50":{"start":{"line":78,"column":24},"end":{"line":78,"column":53}},"51":{"start":{"line":79,"column":16},"end":{"line":82,"column":19}},"52":{"start":{"line":80,"column":20},"end":{"line":80,"column":42}},"53":{"start":{"line":81,"column":20},"end":{"line":81,"column":58}},"54":{"start":{"line":86,"column":12},"end":{"line":86,"column":29}},"55":{"start":{"line":87,"column":12},"end":{"line":87,"column":49}},"56":{"start":{"line":91,"column":8},"end":{"line":98,"column":9}},"57":{"start":{"line":92,"column":12},"end":{"line":94,"column":15}},"58":{"start":{"line":93,"column":16},"end":{"line":93,"column":54}},"59":{"start":{"line":97,"column":12},"end":{"line":97,"column":49}},"60":{"start":{"line":101,"column":8},"end":{"line":108,"column":9}},"61":{"start":{"line":102,"column":12},"end":{"line":104,"column":15}},"62":{"start":{"line":103,"column":16},"end":{"line":103,"column":54}},"63":{"start":{"line":107,"column":12},"end":{"line":107,"column":49}},"64":{"start":{"line":111,"column":8},"end":{"line":120,"column":9}},"65":{"start":{"line":112,"column":12},"end":{"line":114,"column":15}},"66":{"start":{"line":113,"column":16},"end":{"line":113,"column":54}},"67":{"start":{"line":117,"column":12},"end":{"line":119,"column":13}},"68":{"start":{"line":118,"column":16},"end":{"line":118,"column":53}},"69":{"start":{"line":123,"column":8},"end":{"line":130,"column":9}},"70":{"start":{"line":124,"column":12},"end":{"line":124,"column":84}},"71":{"start":{"line":125,"column":29},"end":{"line":125,"column":63}},"72":{"start":{"line":126,"column":12},"end":{"line":126,"column":55}},"73":{"start":{"line":129,"column":12},"end":{"line":129,"column":49}},"74":{"start":{"line":133,"column":8},"end":{"line":138,"column":9}},"75":{"start":{"line":134,"column":12},"end":{"line":134,"column":37}},"76":{"start":{"line":137,"column":12},"end":{"line":137,"column":42}},"77":{"start":{"line":141,"column":0},"end":{"line":141,"column":25}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":11,"column":4},"end":{"line":11,"column":5}},"loc":{"start":{"line":11,"column":22},"end":{"line":18,"column":5}},"line":11},"2":{"name":"(anonymous_2)","decl":{"start":{"line":19,"column":4},"end":{"line":19,"column":5}},"loc":{"start":{"line":19,"column":12},"end":{"line":36,"column":5}},"line":19},"3":{"name":"(anonymous_3)","decl":{"start":{"line":20,"column":27},"end":{"line":20,"column":28}},"loc":{"start":{"line":20,"column":48},"end":{"line":35,"column":9}},"line":20},"4":{"name":"(anonymous_4)","decl":{"start":{"line":27,"column":61},"end":{"line":27,"column":62}},"loc":{"start":{"line":27,"column":67},"end":{"line":30,"column":17}},"line":27},"5":{"name":"(anonymous_5)","decl":{"start":{"line":30,"column":31},"end":{"line":30,"column":32}},"loc":{"start":{"line":30,"column":40},"end":{"line":33,"column":17}},"line":30},"6":{"name":"(anonymous_6)","decl":{"start":{"line":37,"column":4},"end":{"line":37,"column":5}},"loc":{"start":{"line":37,"column":11},"end":{"line":51,"column":5}},"line":37},"7":{"name":"(anonymous_7)","decl":{"start":{"line":39,"column":27},"end":{"line":39,"column":28}},"loc":{"start":{"line":39,"column":48},"end":{"line":50,"column":9}},"line":39},"8":{"name":"(anonymous_8)","decl":{"start":{"line":45,"column":34},"end":{"line":45,"column":35}},"loc":{"start":{"line":45,"column":40},"end":{"line":48,"column":17}},"line":45},"9":{"name":"(anonymous_9)","decl":{"start":{"line":52,"column":4},"end":{"line":52,"column":5}},"loc":{"start":{"line":52,"column":25},"end":{"line":56,"column":5}},"line":52},"10":{"name":"(anonymous_10)","decl":{"start":{"line":57,"column":4},"end":{"line":57,"column":5}},"loc":{"start":{"line":57,"column":21},"end":{"line":63,"column":5}},"line":57},"11":{"name":"(anonymous_11)","decl":{"start":{"line":64,"column":4},"end":{"line":64,"column":5}},"loc":{"start":{"line":64,"column":18},"end":{"line":89,"column":5}},"line":64},"12":{"name":"(anonymous_12)","decl":{"start":{"line":72,"column":97},"end":{"line":72,"column":98}},"loc":{"start":{"line":72,"column":109},"end":{"line":74,"column":17}},"line":72},"13":{"name":"(anonymous_13)","decl":{"start":{"line":79,"column":99},"end":{"line":79,"column":100}},"loc":{"start":{"line":79,"column":111},"end":{"line":82,"column":17}},"line":79},"14":{"name":"(anonymous_14)","decl":{"start":{"line":90,"column":4},"end":{"line":90,"column":5}},"loc":{"start":{"line":90,"column":18},"end":{"line":99,"column":5}},"line":90},"15":{"name":"(anonymous_15)","decl":{"start":{"line":92,"column":51},"end":{"line":92,"column":52}},"loc":{"start":{"line":92,"column":63},"end":{"line":94,"column":13}},"line":92},"16":{"name":"(anonymous_16)","decl":{"start":{"line":100,"column":4},"end":{"line":100,"column":5}},"loc":{"start":{"line":100,"column":19},"end":{"line":109,"column":5}},"line":100},"17":{"name":"(anonymous_17)","decl":{"start":{"line":102,"column":51},"end":{"line":102,"column":52}},"loc":{"start":{"line":102,"column":63},"end":{"line":104,"column":13}},"line":102},"18":{"name":"(anonymous_18)","decl":{"start":{"line":110,"column":4},"end":{"line":110,"column":5}},"loc":{"start":{"line":110,"column":21},"end":{"line":121,"column":5}},"line":110},"19":{"name":"(anonymous_19)","decl":{"start":{"line":112,"column":81},"end":{"line":112,"column":82}},"loc":{"start":{"line":112,"column":93},"end":{"line":114,"column":13}},"line":112},"20":{"name":"(anonymous_20)","decl":{"start":{"line":122,"column":4},"end":{"line":122,"column":5}},"loc":{"start":{"line":122,"column":26},"end":{"line":131,"column":5}},"line":122},"21":{"name":"(anonymous_21)","decl":{"start":{"line":132,"column":4},"end":{"line":132,"column":5}},"loc":{"start":{"line":132,"column":28},"end":{"line":139,"column":5}},"line":132}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":22,"column":12},"end":{"line":34,"column":13}},"type":"if","locations":[{"start":{"line":22,"column":12},"end":{"line":34,"column":13}},{"start":{"line":22,"column":12},"end":{"line":34,"column":13}}],"line":22},"4":{"loc":{"start":{"line":40,"column":12},"end":{"line":49,"column":13}},"type":"if","locations":[{"start":{"line":40,"column":12},"end":{"line":49,"column":13}},{"start":{"line":40,"column":12},"end":{"line":49,"column":13}}],"line":40},"5":{"loc":{"start":{"line":69,"column":12},"end":{"line":83,"column":13}},"type":"if","locations":[{"start":{"line":69,"column":12},"end":{"line":83,"column":13}},{"start":{"line":69,"column":12},"end":{"line":83,"column":13}}],"line":69},"6":{"loc":{"start":{"line":76,"column":17},"end":{"line":83,"column":13}},"type":"if","locations":[{"start":{"line":76,"column":17},"end":{"line":83,"column":13}},{"start":{"line":76,"column":17},"end":{"line":83,"column":13}}],"line":76},"7":{"loc":{"start":{"line":117,"column":12},"end":{"line":119,"column":13}},"type":"if","locations":[{"start":{"line":117,"column":12},"end":{"line":119,"column":13}},{"start":{"line":117,"column":12},"end":{"line":119,"column":13}}],"line":117},"8":{"loc":{"start":{"line":133,"column":8},"end":{"line":138,"column":9}},"type":"if","locations":[{"start":{"line":133,"column":8},"end":{"line":138,"column":9}},{"start":{"line":133,"column":8},"end":{"line":138,"column":9}}],"line":133},"9":{"loc":{"start":{"line":133,"column":12},"end":{"line":133,"column":54}},"type":"binary-expr","locations":[{"start":{"line":133,"column":12},"end":{"line":133,"column":38}},{"start":{"line":133,"column":42},"end":{"line":133,"column":54}}],"line":133}},"s":{"0":1,"1":3,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":1},"f":{"0":3,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0},"b":{"0":[1,1,1],"1":[1,2],"2":[3,3],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0]},"inputSourceMap":{"version":3,"file":"/Users/yexuanjiang/project_team129/src/rest/Server.ts","sources":["/Users/yexuanjiang/project_team129/src/rest/Server.ts"],"names":[],"mappings":"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","sourcesContent":["import express, {Application, Request, Response} from \"express\";\nimport * as http from \"http\";\nimport cors from \"cors\";\nimport InsightFacade from \"../controller/InsightFacade\";\nimport * as fs from \"fs-extra\";\nimport {InsightDatasetKind, NotFoundError} from \"../controller/IInsightFacade\";\n\nexport default class Server {\n\tprivate readonly port: number;\n\tprivate express: Application;\n\tprivate server: http.Server | undefined;\n\tprivate insightFacade: InsightFacade;\n\n\tconstructor(port: number) {\n\t\tconsole.info(`Server::<init>( ${port} )`);\n\t\tthis.port = port;\n\t\tthis.express = express();\n\n\t\tthis.registerMiddleware();\n\t\tthis.registerRoutes();\n\t\tthis.insightFacade = new InsightFacade();\n\n\t\t// NOTE: you can serve static frontend files in from your express server\n\t\t// by uncommenting the line below. This makes files in ./frontend/public\n\t\t// accessible at http://localhost:<port>/\n\t\t// this.express.use(express.static(\"./frontend/public\"))\n\t}\n\n\t/**\n\t * Starts the server. Returns a promise that resolves if success. Promises are used\n\t * here because starting the server takes some time and we want to know when it\n\t * is done (and if it worked).\n\t *\n\t * @returns {Promise<void>}\n\t */\n\tpublic start(): Promise<void> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconsole.info(\"Server::start() - start\");\n\t\t\tif (this.server !== undefined) {\n\t\t\t\tconsole.error(\"Server::start() - server already listening\");\n\t\t\t\treject();\n\t\t\t} else {\n\t\t\t\tthis.server = this.express.listen(this.port, () => {\n\t\t\t\t\tconsole.info(`Server::start() - server listening on port: ${this.port}`);\n\t\t\t\t\tresolve();\n\t\t\t\t}).on(\"error\", (err: Error) => {\n\t\t\t\t\t// catches errors in server start\n\t\t\t\t\tconsole.error(`Server::start() - server ERROR: ${err.message}`);\n\t\t\t\t\treject(err);\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Stops the server. Again returns a promise so we know when the connections have\n\t * actually been fully closed and the port has been released.\n\t *\n\t * @returns {Promise<void>}\n\t */\n\tpublic stop(): Promise<void> {\n\t\tconsole.info(\"Server::stop()\");\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tif (this.server === undefined) {\n\t\t\t\tconsole.error(\"Server::stop() - ERROR: server not started\");\n\t\t\t\treject();\n\t\t\t} else {\n\t\t\t\tthis.server.close(() => {\n\t\t\t\t\tconsole.info(\"Server::stop() - server closed\");\n\t\t\t\t\tresolve();\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\t// Registers middleware to parse request before passing them to request handlers\n\tprivate registerMiddleware() {\n\t\t// JSON parser must be place before raw parser because of wildcard matching done by raw parser below\n\t\tthis.express.use(express.json());\n\t\tthis.express.use(express.raw({type: \"application/*\", limit: \"10mb\"}));\n\n\t\t// enable cors in request headers to allow cross-origin HTTP requests\n\t\tthis.express.use(cors());\n\t}\n\n\t// Registers all request handlers to routes\n\tprivate registerRoutes() {\n\t\t// This is an example endpoint this you can invoke by accessing this URL in your browser:\n\t\t// http://localhost:4321/echo/hello\n\t\tthis.express.get(\"/echo/:msg\", Server.echo);\n\t\t// PUT\n\t\tthis.express.put(\"/dataset/:id/:kind\",this.put);\n\t\t// DELETE\n\t\tthis.express.delete(\"/dataset/:id\", this.delete);\n\t\t// QUERY\n\t\tthis.express.post(\"/query\", this.post);\n\t\t// GET\n\t\tthis.express.get(\"/datasets\", this.get);\n\t}\n\n\t// http://localhost:4321/dataset/:id/:kind\n\tprivate put(req: Request, res: Response) {\n\t\tconst id = req.params.id;\n\t\tlet content = Buffer.from(req.body).toString(\"base64\");\n\t\tconst kind = req.params.kind;\n\t\ttry {\n\t\t\tif (kind === InsightDatasetKind.Rooms) {\n\t\t\t\tconsole.log(\"rooms\");\n\t\t\t\tlet i = new InsightFacade();\n\t\t\t\treturn i.addDataset(id, content, InsightDatasetKind.Rooms).then((result) => {\n\t\t\t\t\tres.status(200).json({res: result});\n\t\t\t\t});\n\t\t\t} else if (kind === InsightDatasetKind.Courses) {\n\t\t\t\tconsole.log(\"courses\");\n\t\t\t\tlet i = new InsightFacade();\n\t\t\t\treturn i.addDataset(id, content, InsightDatasetKind.Courses).then((result) => {\n\t\t\t\t\tconsole.log(\"added!\");\n\t\t\t\t\tres.status(200).json({res: result});\n\t\t\t\t});\n\t\t\t}\n\t\t}catch (err) {\n\t\t\tconsole.log(err);\n\t\t\tres.status(400).json({error: err});\n\t\t}\n\t}\n\n\t// http://localhost:4321/dataset\n\tprivate get(req: Request, res: Response) {\n\t\ttry {\n\t\t\tthis.insightFacade.listDatasets().then((result) => {\n\t\t\t\tres.status(200).json({res: result});\n\t\t\t});\n\t\t} catch (err) {\n\t\t\tres.status(400).json({error: err});\n\t\t}\n\t}\n\n\t// http://localhost:4321/query\n\tprivate post(req: Request, res: Response) {\n\t\ttry {\n\t\t\tthis.insightFacade.listDatasets().then((result) => {\n\t\t\t\tres.status(200).json({res: result});\n\t\t\t});\n\t\t} catch (err) {\n\t\t\tres.status(400).json({error: err});\n\t\t}\n\t}\n\n\t// http://localhost:4321/dataset/:id\n\tprivate delete(req: Request, res: Response) {\n\t\ttry {\n\t\t\tthis.insightFacade.removeDataset(JSON.stringify(req.params.id)).then((result) => {\n\t\t\t\tres.status(200).json({res: result});\n\t\t\t});\n\t\t} catch (err) {\n\t\t\tif(err === NotFoundError) {\n\t\t\t\tres.status(400).json({error: err});\n\t\t\t}\n\t\t}\n\t}\n\n\t// The next two methods handle the echo service.\n\t// These are almost certainly not the best place to put these, but are here for your reference.\n\t// By updating the Server.echo function pointer above, these methods can be easily moved.\n\tprivate static echo(req: Request, res: Response) {\n\t\ttry {\n\t\t\tconsole.log(`Server::echo(..) - params: ${JSON.stringify(req.params)}`);\n\t\t\tconst response = Server.performEcho(req.params.msg);\n\t\t\tres.status(200).json({result: response});\n\t\t} catch (err) {\n\t\t\tres.status(400).json({error: err});\n\t\t}\n\t}\n\n\tprivate static performEcho(msg: string): string {\n\t\tif (typeof msg !== \"undefined\" && msg !== null) {\n\t\t\treturn `${msg}...${msg}`;\n\t\t} else {\n\t\t\treturn \"Message not provided\";\n\t\t}\n\t}\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"763e0502cbdfdd1fa4727b89841a02632c057441","contentHash":"be909c25b8c7e4285f02b2def647f03227ac4a6ce0cc16034b75b41aff3a448d"},"/Users/yexuanjiang/project_team129/src/controller/InsightFacade.ts":{"path":"/Users/yexuanjiang/project_team129/src/controller/InsightFacade.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":8,"column":3}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"2":{"start":{"line":3,"column":26},"end":{"line":3,"column":33}},"3":{"start":{"line":4,"column":4},"end":{"line":4,"column":89}},"4":{"start":{"line":4,"column":71},"end":{"line":4,"column":83}},"5":{"start":{"line":6,"column":4},"end":{"line":6,"column":33}},"6":{"start":{"line":6,"column":26},"end":{"line":6,"column":33}},"7":{"start":{"line":7,"column":4},"end":{"line":7,"column":17}},"8":{"start":{"line":9,"column":25},"end":{"line":13,"column":2}},"9":{"start":{"line":10,"column":4},"end":{"line":10,"column":72}},"10":{"start":{"line":12,"column":4},"end":{"line":12,"column":21}},"11":{"start":{"line":14,"column":19},"end":{"line":20,"column":1}},"12":{"start":{"line":15,"column":4},"end":{"line":15,"column":42}},"13":{"start":{"line":15,"column":31},"end":{"line":15,"column":42}},"14":{"start":{"line":16,"column":17},"end":{"line":16,"column":19}},"15":{"start":{"line":17,"column":4},"end":{"line":17,"column":141}},"16":{"start":{"line":17,"column":21},"end":{"line":17,"column":141}},"17":{"start":{"line":17,"column":40},"end":{"line":17,"column":141}},"18":{"start":{"line":17,"column":109},"end":{"line":17,"column":141}},"19":{"start":{"line":18,"column":4},"end":{"line":18,"column":36}},"20":{"start":{"line":19,"column":4},"end":{"line":19,"column":18}},"21":{"start":{"line":21,"column":0},"end":{"line":21,"column":62}},"22":{"start":{"line":22,"column":25},"end":{"line":22,"column":52}},"23":{"start":{"line":23,"column":28},"end":{"line":23,"column":58}},"24":{"start":{"line":24,"column":26},"end":{"line":24,"column":54}},"25":{"start":{"line":25,"column":16},"end":{"line":25,"column":46}},"26":{"start":{"line":26,"column":11},"end":{"line":26,"column":38}},"27":{"start":{"line":27,"column":13},"end":{"line":27,"column":26}},"28":{"start":{"line":30,"column":8},"end":{"line":30,"column":34}},"29":{"start":{"line":31,"column":8},"end":{"line":31,"column":22}},"30":{"start":{"line":34,"column":8},"end":{"line":36,"column":9}},"31":{"start":{"line":35,"column":12},"end":{"line":35,"column":33}},"32":{"start":{"line":37,"column":8},"end":{"line":39,"column":9}},"33":{"start":{"line":38,"column":12},"end":{"line":38,"column":113}},"34":{"start":{"line":40,"column":8},"end":{"line":40,"column":105}},"35":{"start":{"line":43,"column":8},"end":{"line":55,"column":11}},"36":{"start":{"line":44,"column":12},"end":{"line":46,"column":13}},"37":{"start":{"line":45,"column":16},"end":{"line":45,"column":62}},"38":{"start":{"line":47,"column":12},"end":{"line":53,"column":13}},"39":{"start":{"line":48,"column":16},"end":{"line":52,"column":17}},"40":{"start":{"line":49,"column":20},"end":{"line":49,"column":106}},"41":{"start":{"line":50,"column":20},"end":{"line":50,"column":61}},"42":{"start":{"line":51,"column":20},"end":{"line":51,"column":32}},"43":{"start":{"line":54,"column":12},"end":{"line":54,"column":59}},"44":{"start":{"line":58,"column":8},"end":{"line":65,"column":11}},"45":{"start":{"line":59,"column":12},"end":{"line":64,"column":13}},"46":{"start":{"line":60,"column":16},"end":{"line":60,"column":58}},"47":{"start":{"line":63,"column":16},"end":{"line":63,"column":26}},"48":{"start":{"line":68,"column":8},"end":{"line":70,"column":11}},"49":{"start":{"line":69,"column":12},"end":{"line":69,"column":42}},"50":{"start":{"line":73,"column":0},"end":{"line":73,"column":32}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":74},"end":{"line":2,"column":75}},"loc":{"start":{"line":2,"column":96},"end":{"line":5,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":4,"column":58},"end":{"line":4,"column":59}},"loc":{"start":{"line":4,"column":69},"end":{"line":4,"column":85}},"line":4},"2":{"name":"(anonymous_2)","decl":{"start":{"line":5,"column":6},"end":{"line":5,"column":7}},"loc":{"start":{"line":5,"column":28},"end":{"line":8,"column":1}},"line":5},"3":{"name":"(anonymous_3)","decl":{"start":{"line":9,"column":80},"end":{"line":9,"column":81}},"loc":{"start":{"line":9,"column":95},"end":{"line":11,"column":1}},"line":9},"4":{"name":"(anonymous_4)","decl":{"start":{"line":11,"column":5},"end":{"line":11,"column":6}},"loc":{"start":{"line":11,"column":20},"end":{"line":13,"column":1}},"line":11},"5":{"name":"(anonymous_5)","decl":{"start":{"line":14,"column":50},"end":{"line":14,"column":51}},"loc":{"start":{"line":14,"column":65},"end":{"line":20,"column":1}},"line":14},"6":{"name":"(anonymous_6)","decl":{"start":{"line":29,"column":4},"end":{"line":29,"column":5}},"loc":{"start":{"line":29,"column":18},"end":{"line":32,"column":5}},"line":29},"7":{"name":"(anonymous_7)","decl":{"start":{"line":33,"column":4},"end":{"line":33,"column":5}},"loc":{"start":{"line":33,"column":34},"end":{"line":41,"column":5}},"line":33},"8":{"name":"(anonymous_8)","decl":{"start":{"line":42,"column":4},"end":{"line":42,"column":5}},"loc":{"start":{"line":42,"column":22},"end":{"line":56,"column":5}},"line":42},"9":{"name":"(anonymous_9)","decl":{"start":{"line":43,"column":27},"end":{"line":43,"column":28}},"loc":{"start":{"line":43,"column":48},"end":{"line":55,"column":9}},"line":43},"10":{"name":"(anonymous_10)","decl":{"start":{"line":57,"column":4},"end":{"line":57,"column":5}},"loc":{"start":{"line":57,"column":24},"end":{"line":66,"column":5}},"line":57},"11":{"name":"(anonymous_11)","decl":{"start":{"line":58,"column":27},"end":{"line":58,"column":28}},"loc":{"start":{"line":58,"column":48},"end":{"line":65,"column":9}},"line":58},"12":{"name":"(anonymous_12)","decl":{"start":{"line":67,"column":4},"end":{"line":67,"column":5}},"loc":{"start":{"line":67,"column":19},"end":{"line":71,"column":5}},"line":67},"13":{"name":"(anonymous_13)","decl":{"start":{"line":68,"column":27},"end":{"line":68,"column":28}},"loc":{"start":{"line":68,"column":40},"end":{"line":70,"column":9}},"line":68}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":8,"column":3}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":57},"end":{"line":8,"column":2}}],"line":2},"1":{"loc":{"start":{"line":2,"column":57},"end":{"line":8,"column":2}},"type":"cond-expr","locations":[{"start":{"line":2,"column":74},"end":{"line":5,"column":1}},{"start":{"line":5,"column":6},"end":{"line":8,"column":1}}],"line":2},"2":{"loc":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"type":"if","locations":[{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},{"start":{"line":3,"column":4},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":6,"column":4},"end":{"line":6,"column":33}},"type":"if","locations":[{"start":{"line":6,"column":4},"end":{"line":6,"column":33}},{"start":{"line":6,"column":4},"end":{"line":6,"column":33}}],"line":6},"4":{"loc":{"start":{"line":9,"column":25},"end":{"line":13,"column":2}},"type":"binary-expr","locations":[{"start":{"line":9,"column":26},"end":{"line":9,"column":30}},{"start":{"line":9,"column":34},"end":{"line":9,"column":57}},{"start":{"line":9,"column":63},"end":{"line":13,"column":1}}],"line":9},"5":{"loc":{"start":{"line":9,"column":63},"end":{"line":13,"column":1}},"type":"cond-expr","locations":[{"start":{"line":9,"column":80},"end":{"line":11,"column":1}},{"start":{"line":11,"column":5},"end":{"line":13,"column":1}}],"line":9},"6":{"loc":{"start":{"line":14,"column":19},"end":{"line":20,"column":1}},"type":"binary-expr","locations":[{"start":{"line":14,"column":20},"end":{"line":14,"column":24}},{"start":{"line":14,"column":28},"end":{"line":14,"column":45}},{"start":{"line":14,"column":50},"end":{"line":20,"column":1}}],"line":14},"7":{"loc":{"start":{"line":15,"column":4},"end":{"line":15,"column":42}},"type":"if","locations":[{"start":{"line":15,"column":4},"end":{"line":15,"column":42}},{"start":{"line":15,"column":4},"end":{"line":15,"column":42}}],"line":15},"8":{"loc":{"start":{"line":15,"column":8},"end":{"line":15,"column":29}},"type":"binary-expr","locations":[{"start":{"line":15,"column":8},"end":{"line":15,"column":11}},{"start":{"line":15,"column":15},"end":{"line":15,"column":29}}],"line":15},"9":{"loc":{"start":{"line":17,"column":4},"end":{"line":17,"column":141}},"type":"if","locations":[{"start":{"line":17,"column":4},"end":{"line":17,"column":141}},{"start":{"line":17,"column":4},"end":{"line":17,"column":141}}],"line":17},"10":{"loc":{"start":{"line":17,"column":40},"end":{"line":17,"column":141}},"type":"if","locations":[{"start":{"line":17,"column":40},"end":{"line":17,"column":141}},{"start":{"line":17,"column":40},"end":{"line":17,"column":141}}],"line":17},"11":{"loc":{"start":{"line":17,"column":44},"end":{"line":17,"column":107}},"type":"binary-expr","locations":[{"start":{"line":17,"column":44},"end":{"line":17,"column":59}},{"start":{"line":17,"column":63},"end":{"line":17,"column":107}}],"line":17},"12":{"loc":{"start":{"line":34,"column":8},"end":{"line":36,"column":9}},"type":"if","locations":[{"start":{"line":34,"column":8},"end":{"line":36,"column":9}},{"start":{"line":34,"column":8},"end":{"line":36,"column":9}}],"line":34},"13":{"loc":{"start":{"line":37,"column":8},"end":{"line":39,"column":9}},"type":"if","locations":[{"start":{"line":37,"column":8},"end":{"line":39,"column":9}},{"start":{"line":37,"column":8},"end":{"line":39,"column":9}}],"line":37},"14":{"loc":{"start":{"line":44,"column":12},"end":{"line":46,"column":13}},"type":"if","locations":[{"start":{"line":44,"column":12},"end":{"line":46,"column":13}},{"start":{"line":44,"column":12},"end":{"line":46,"column":13}}],"line":44},"15":{"loc":{"start":{"line":44,"column":16},"end":{"line":44,"column":67}},"type":"binary-expr","locations":[{"start":{"line":44,"column":16},"end":{"line":44,"column":26}},{"start":{"line":44,"column":30},"end":{"line":44,"column":52}},{"start":{"line":44,"column":56},"end":{"line":44,"column":67}}],"line":44},"16":{"loc":{"start":{"line":48,"column":16},"end":{"line":52,"column":17}},"type":"if","locations":[{"start":{"line":48,"column":16},"end":{"line":52,"column":17}},{"start":{"line":48,"column":16},"end":{"line":52,"column":17}}],"line":48}},"s":{"0":1,"1":99,"2":99,"3":99,"4":0,"5":0,"6":0,"7":0,"8":1,"9":1,"10":0,"11":1,"12":1,"13":0,"14":1,"15":1,"16":1,"17":99,"18":99,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":1},"f":{"0":99,"1":0,"2":0,"3":1,"4":0,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0},"b":{"0":[1,1,1],"1":[1,0],"2":[99,0],"3":[0,0],"4":[1,1,1],"5":[1,0],"6":[1,1,1],"7":[0,1],"8":[1,1],"9":[1,0],"10":[99,0],"11":[99,99],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0,0],"16":[0,0]},"inputSourceMap":{"version":3,"file":"/Users/yexuanjiang/project_team129/src/controller/InsightFacade.ts","sources":["/Users/yexuanjiang/project_team129/src/controller/InsightFacade.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA,qDAAiH;AACjH,2DAAsD;AACtD,uDAAkD;AAClD,+CAAiD;AACjD,uCAAyB;AACzB,2BAA8B;AAO9B,MAAqB,aAAa;IAAlC;QACS,oBAAe,GAAqB,EAAE,CAAC;QACvC,QAAG,GAAe,EAAE,CAAC;IAgD9B,CAAC;IA9CO,UAAU,CAAC,EAAU,EAAE,OAAe,EAAE,IAAwB;QAEtE,IAAG,CAAC,IAAA,eAAU,EAAC,MAAM,CAAC,EAAE;YACvB,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;SACrB;QACD,IAAG,IAAI,KAAK,mCAAkB,CAAC,OAAO,EAAE;YACvC,OAAO,IAAA,qCAAiB,EAAC,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC;SAC5E;QACD,OAAO,IAAA,iCAAe,EAAC,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC;IAC3E,CAAC;IAGM,aAAa,CAAC,EAAU;QAC9B,OAAO,IAAI,OAAO,CAAS,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YAC9C,IAAI,EAAE,KAAK,GAAG,IAAI,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,IAAI,EAAE,KAAK,IAAI,EAAE;gBACxD,MAAM,CAAC,IAAI,6BAAY,CAAC,EAAE,CAAC,CAAC,CAAC;aAC7B;YACD,KAAK,IAAI,CAAC,IAAI,IAAI,CAAC,eAAe,EAAE;gBACnC,IAAI,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,EAAE;oBACtC,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;oBACtF,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;oBACzC,OAAO,CAAC,EAAE,CAAC,CAAC;iBACZ;aACD;YACD,MAAM,CAAC,IAAI,8BAAa,CAAC,EAAE,CAAC,CAAC,CAAC;QAC/B,CAAC,CAAC,CAAC;IACJ,CAAC;IAKM,YAAY,CAAC,KAAU;QAC7B,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YACtC,IAAI;gBACH,OAAO,CAAC,IAAA,oBAAY,EAAC,KAAK,CAAC,CAAC,CAAC;aAC7B;YAAC,OAAO,CAAC,EAAE;gBACX,MAAM,CAAC,CAAC,CAAC,CAAC;aACV;QACF,CAAC,CAAC,CAAC;IACJ,CAAC;IAEM,YAAY;QAClB,OAAO,IAAI,OAAO,CAAmB,CAAC,OAAO,EAAE,EAAE;YAChD,OAAO,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;QAC/B,CAAC,CAAC,CAAC;IACJ,CAAC;CACD;AAlDD,gCAkDC","sourcesContent":["import {IInsightFacade, InsightDataset, InsightDatasetKind, InsightError, NotFoundError} from \"./IInsightFacade\";\nimport {getCoursesPromise} from \"./getCoursesPromise\";\nimport {getRoomsPromise} from \"./getRoomsPromise\";\nimport {performQuery} from \"./queryEngine/Query\";\nimport * as fs from \"fs\";\nimport {existsSync} from \"fs\";\n\n/**\n * This is the main programmatic entry point for the project.\n * Method documentation is in IInsightFacade\n *\n */\nexport default class InsightFacade implements IInsightFacade {\n\tprivate insightDatasets: InsightDataset[] = [];\n\tprivate ids:  string [] = [];\n\n\tpublic addDataset(id: string, content: string, kind: InsightDatasetKind): Promise<string[]> {\n\t\t// if directory does not exist, then create it\n\t\tif(!existsSync(\"data\")) {\n\t\t\tfs.mkdirSync(\"data\");\n\t\t}\n\t\tif(kind === InsightDatasetKind.Courses) {\n\t\t\treturn getCoursesPromise(id, content, kind, this.ids, this.insightDatasets);\n\t\t}\n\t\treturn getRoomsPromise(id, content, kind, this.ids, this.insightDatasets);\n\t}\n\n\n\tpublic removeDataset(id: string): Promise<string> {\n\t\treturn new Promise<string>((resolve, reject) => {\n\t\t\tif (id === \" \" || id.indexOf(\"_\") !== -1 || id === \"\\t\") {\n\t\t\t\treject(new InsightError([]));\n\t\t\t}\n\t\t\tfor (let i in this.insightDatasets) {\n\t\t\t\tif (this.insightDatasets[i].id === id) {\n\t\t\t\t\tthis.insightDatasets.splice(this.insightDatasets.indexOf(this.insightDatasets[i]), 1);\n\t\t\t\t\tthis.ids.splice(this.ids.indexOf(id), 1);\n\t\t\t\t\tresolve(id);\n\t\t\t\t}\n\t\t\t}\n\t\t\treject(new NotFoundError([]));\n\t\t});\n\t}\n\n\t// How to read json file, for example\n\t// const data = fs.readFileSync('course.json');\n\t// console.log(JSON.parse(data.toString()));\n\tpublic performQuery(query: any): Promise<any[]> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\ttry {\n\t\t\t\tresolve(performQuery(query));\n\t\t\t} catch (e) {\n\t\t\t\treject(e);\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic listDatasets(): Promise<InsightDataset[]> {\n\t\treturn new Promise<InsightDataset[]>((resolve) => {\n\t\t\tresolve(this.insightDatasets);\n\t\t});\n\t}\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"88e5eee857c9f3eb1c0aa182eeb69c2251effd47","contentHash":"660965e8b28ba1c676c5735ec38aa78dd3103ac5da3a2156de194f061641898e"},"/Users/yexuanjiang/project_team129/src/controller/IInsightFacade.ts":{"path":"/Users/yexuanjiang/project_team129/src/controller/IInsightFacade.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":113}},"2":{"start":{"line":5,"column":0},"end":{"line":8,"column":89}},"3":{"start":{"line":6,"column":4},"end":{"line":6,"column":46}},"4":{"start":{"line":7,"column":4},"end":{"line":7,"column":42}},"5":{"start":{"line":11,"column":8},"end":{"line":11,"column":23}},"6":{"start":{"line":12,"column":8},"end":{"line":12,"column":52}},"7":{"start":{"line":15,"column":0},"end":{"line":15,"column":36}},"8":{"start":{"line":18,"column":8},"end":{"line":18,"column":23}},"9":{"start":{"line":19,"column":8},"end":{"line":19,"column":53}},"10":{"start":{"line":22,"column":0},"end":{"line":22,"column":38}},"11":{"start":{"line":25,"column":8},"end":{"line":25,"column":23}},"12":{"start":{"line":26,"column":8},"end":{"line":26,"column":59}},"13":{"start":{"line":29,"column":0},"end":{"line":29,"column":50}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":1},"end":{"line":5,"column":2}},"loc":{"start":{"line":5,"column":31},"end":{"line":8,"column":1}},"line":5},"1":{"name":"(anonymous_1)","decl":{"start":{"line":10,"column":4},"end":{"line":10,"column":5}},"loc":{"start":{"line":10,"column":25},"end":{"line":13,"column":5}},"line":10},"2":{"name":"(anonymous_2)","decl":{"start":{"line":17,"column":4},"end":{"line":17,"column":5}},"loc":{"start":{"line":17,"column":25},"end":{"line":20,"column":5}},"line":17},"3":{"name":"(anonymous_3)","decl":{"start":{"line":24,"column":4},"end":{"line":24,"column":5}},"loc":{"start":{"line":24,"column":25},"end":{"line":27,"column":5}},"line":24}},"branchMap":{"0":{"loc":{"start":{"line":8,"column":24},"end":{"line":8,"column":87}},"type":"binary-expr","locations":[{"start":{"line":8,"column":24},"end":{"line":8,"column":50}},{"start":{"line":8,"column":55},"end":{"line":8,"column":86}}],"line":8}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":1,"8":0,"9":0,"10":1,"11":0,"12":0,"13":1},"f":{"0":1,"1":0,"2":0,"3":0},"b":{"0":[1,1]},"inputSourceMap":{"version":3,"file":"/Users/yexuanjiang/project_team129/src/controller/IInsightFacade.ts","sources":["/Users/yexuanjiang/project_team129/src/controller/IInsightFacade.ts"],"names":[],"mappings":";;;AAMA,IAAY,kBAGX;AAHD,WAAY,kBAAkB;IAC7B,yCAAmB,CAAA;IACnB,qCAAe,CAAA;AAChB,CAAC,EAHW,kBAAkB,GAAlB,0BAAkB,KAAlB,0BAAkB,QAG7B;AAQD,MAAa,YAAa,SAAQ,KAAK;IACtC,YAAY,GAAG,IAAW;QACzB,KAAK,CAAC,GAAG,IAAI,CAAC,CAAC;QACf,KAAK,CAAC,iBAAiB,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;IAC7C,CAAC;CACD;AALD,oCAKC;AAED,MAAa,aAAc,SAAQ,KAAK;IACvC,YAAY,GAAG,IAAW;QACzB,KAAK,CAAC,GAAG,IAAI,CAAC,CAAC;QACf,KAAK,CAAC,iBAAiB,CAAC,IAAI,EAAE,aAAa,CAAC,CAAC;IAC9C,CAAC;CACD;AALD,sCAKC;AAED,MAAa,mBAAoB,SAAQ,KAAK;IAC7C,YAAY,GAAG,IAAW;QACzB,KAAK,CAAC,GAAG,IAAI,CAAC,CAAC;QACf,KAAK,CAAC,iBAAiB,CAAC,IAAI,EAAE,mBAAmB,CAAC,CAAC;IACpD,CAAC;CACD;AALD,kDAKC","sourcesContent":["/*\n * This is the primary high-level API for the project. In this folder there should be:\n * A class called InsightFacade, this should be in a file called InsightFacade.ts.\n * You should not change this interface at all or the test suite will not work.\n */\n\nexport enum InsightDatasetKind {\n\tCourses = \"courses\",\n\tRooms = \"rooms\",\n}\n\nexport interface InsightDataset {\n\tid: string;\n\tkind: InsightDatasetKind;\n\tnumRows: number;\n}\n\nexport class InsightError extends Error {\n\tconstructor(...args: any[]) {\n\t\tsuper(...args);\n\t\tError.captureStackTrace(this, InsightError);\n\t}\n}\n\nexport class NotFoundError extends Error {\n\tconstructor(...args: any[]) {\n\t\tsuper(...args);\n\t\tError.captureStackTrace(this, NotFoundError);\n\t}\n}\n\nexport class ResultTooLargeError extends Error {\n\tconstructor(...args: any[]) {\n\t\tsuper(...args);\n\t\tError.captureStackTrace(this, ResultTooLargeError);\n\t}\n}\n\nexport interface IInsightFacade {\n\t/**\n\t * Add a dataset to insightUBC.\n\t *\n\t * @param id  The id of the dataset being added. Follows the format /^[^_]+$/\n\t * @param content  The base64 content of the dataset. This content should be in the form of a serialized zip file.\n\t * @param kind  The kind of the dataset\n\t *\n\t * @return Promise <string[]>\n\t *\n\t * The promise should fulfill on a successful add, reject for any failures.\n\t * The promise should fulfill with a string array,\n\t * containing the ids of all currently added datasets upon a successful add.\n\t * The promise should reject with an InsightError describing the error.\n\t *\n\t * An id is invalid if it contains an underscore, or is only whitespace characters.\n\t * If id is the same as the id of an already added dataset, the dataset should be rejected and not saved.\n\t *\n\t * After receiving the dataset, it should be processed into a data structure of\n\t * your design. The processed data structure should be persisted to disk; your\n\t * system should be able to load this persisted value into memory for answering\n\t * queries.\n\t *\n\t * Ultimately, a dataset must be added or loaded from disk before queries can\n\t * be successfully answered.\n\t */\n\taddDataset(id: string, content: string, kind: InsightDatasetKind): Promise<string[]>;\n\n\t/**\n\t * Remove a dataset from insightUBC.\n\t *\n\t * @param id  The id of the dataset to remove. Follows the format /^[^_]+$/\n\t *\n\t * @return Promise <string>\n\t *\n\t * The promise should fulfill upon a successful removal, reject on any error.\n\t * Attempting to remove a dataset that hasn't been added yet counts as an error.\n\t *\n\t * An id is invalid if it contains an underscore, or is only whitespace characters.\n\t *\n\t * The promise should fulfill the id of the dataset that was removed.\n\t * The promise should reject with a NotFoundError (if a valid id was not yet added)\n\t * or an InsightError (invalid id or any other source of failure) describing the error.\n\t *\n\t * This will delete both disk and memory caches for the dataset for the id meaning\n\t * that subsequent queries for that id should fail unless a new addDataset happens first.\n\t */\n\tremoveDataset(id: string): Promise<string>;\n\n\t/**\n\t * Perform a query on insightUBC.\n\t *\n\t * @param query  The query to be performed.\n\t *\n\t * If a query is incorrectly formatted, references a dataset not added (in memory or on disk),\n\t * or references multiple datasets, it should be rejected.\n\t *\n\t * @return Promise <any[]>\n\t *\n\t * The promise should fulfill with an array of results.\n\t * The promise should reject with a ResultTooLargeError (if the query returns too many results)\n\t * or an InsightError (for any other source of failure) describing the error.\n\t */\n\tperformQuery(query: any): Promise<any[]>;\n\n\t/**\n\t * List all currently added datasets, their types, and number of rows.\n\t *\n\t * @return Promise <InsightDataset[]>\n\t * The promise should fulfill an array of currently added InsightDatasets, and will only fulfill.\n\t */\n\tlistDatasets(): Promise<InsightDataset[]>;\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"5eaa3e069502fa759d4e803886279d7714043727","contentHash":"590a2712af66e2752d42fc71e8890ee31957700ad07775cc2e1acd98e7c7631c"},"/Users/yexuanjiang/project_team129/src/controller/getCoursesPromise.ts":{"path":"/Users/yexuanjiang/project_team129/src/controller/getCoursesPromise.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":59}},"4":{"start":{"line":7,"column":25},"end":{"line":7,"column":52}},"5":{"start":{"line":8,"column":16},"end":{"line":8,"column":49}},"6":{"start":{"line":9,"column":13},"end":{"line":9,"column":43}},"7":{"start":{"line":10,"column":16},"end":{"line":10,"column":25}},"8":{"start":{"line":12,"column":4},"end":{"line":42,"column":7}},"9":{"start":{"line":13,"column":8},"end":{"line":13,"column":21}},"10":{"start":{"line":14,"column":8},"end":{"line":41,"column":9}},"11":{"start":{"line":15,"column":12},"end":{"line":17,"column":13}},"12":{"start":{"line":16,"column":16},"end":{"line":16,"column":62}},"13":{"start":{"line":18,"column":12},"end":{"line":22,"column":13}},"14":{"start":{"line":19,"column":16},"end":{"line":21,"column":17}},"15":{"start":{"line":20,"column":20},"end":{"line":20,"column":66}},"16":{"start":{"line":23,"column":12},"end":{"line":37,"column":15}},"17":{"start":{"line":25,"column":27},"end":{"line":25,"column":53}},"18":{"start":{"line":26,"column":40},"end":{"line":26,"column":42}},"19":{"start":{"line":27,"column":16},"end":{"line":29,"column":17}},"20":{"start":{"line":28,"column":20},"end":{"line":28,"column":79}},"21":{"start":{"line":30,"column":16},"end":{"line":34,"column":19}},"22":{"start":{"line":31,"column":20},"end":{"line":31,"column":33}},"23":{"start":{"line":33,"column":20},"end":{"line":33,"column":66}},"24":{"start":{"line":36,"column":16},"end":{"line":36,"column":62}},"25":{"start":{"line":40,"column":12},"end":{"line":40,"column":58}},"26":{"start":{"line":44,"column":0},"end":{"line":44,"column":46}},"27":{"start":{"line":46,"column":4},"end":{"line":70,"column":7}},"28":{"start":{"line":47,"column":22},"end":{"line":47,"column":23}},"29":{"start":{"line":48,"column":22},"end":{"line":48,"column":24}},"30":{"start":{"line":49,"column":8},"end":{"line":62,"column":9}},"31":{"start":{"line":50,"column":12},"end":{"line":61,"column":13}},"32":{"start":{"line":51,"column":30},"end":{"line":51,"column":57}},"33":{"start":{"line":52,"column":16},"end":{"line":60,"column":17}},"34":{"start":{"line":53,"column":40},"end":{"line":53,"column":286}},"35":{"start":{"line":54,"column":20},"end":{"line":56,"column":21}},"36":{"start":{"line":55,"column":24},"end":{"line":55,"column":58}},"37":{"start":{"line":57,"column":20},"end":{"line":57,"column":48}},"38":{"start":{"line":58,"column":20},"end":{"line":58,"column":104}},"39":{"start":{"line":59,"column":20},"end":{"line":59,"column":30}},"40":{"start":{"line":63,"column":28},"end":{"line":67,"column":9}},"41":{"start":{"line":68,"column":8},"end":{"line":68,"column":84}},"42":{"start":{"line":69,"column":8},"end":{"line":69,"column":42}},"43":{"start":{"line":74,"column":8},"end":{"line":74,"column":25}},"44":{"start":{"line":75,"column":8},"end":{"line":75,"column":21}},"45":{"start":{"line":76,"column":8},"end":{"line":76,"column":23}},"46":{"start":{"line":77,"column":8},"end":{"line":77,"column":37}},"47":{"start":{"line":78,"column":8},"end":{"line":78,"column":27}},"48":{"start":{"line":79,"column":8},"end":{"line":79,"column":25}},"49":{"start":{"line":80,"column":8},"end":{"line":80,"column":25}},"50":{"start":{"line":81,"column":8},"end":{"line":81,"column":27}},"51":{"start":{"line":82,"column":8},"end":{"line":82,"column":25}},"52":{"start":{"line":83,"column":8},"end":{"line":83,"column":25}},"53":{"start":{"line":86,"column":0},"end":{"line":86,"column":38}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"getCoursesPromise","decl":{"start":{"line":11,"column":9},"end":{"line":11,"column":26}},"loc":{"start":{"line":11,"column":68},"end":{"line":43,"column":1}},"line":11},"2":{"name":"(anonymous_2)","decl":{"start":{"line":12,"column":23},"end":{"line":12,"column":24}},"loc":{"start":{"line":12,"column":44},"end":{"line":42,"column":5}},"line":12},"3":{"name":"(anonymous_3)","decl":{"start":{"line":24,"column":22},"end":{"line":24,"column":23}},"loc":{"start":{"line":24,"column":35},"end":{"line":35,"column":13}},"line":24},"4":{"name":"(anonymous_4)","decl":{"start":{"line":30,"column":87},"end":{"line":30,"column":88}},"loc":{"start":{"line":30,"column":93},"end":{"line":32,"column":17}},"line":30},"5":{"name":"(anonymous_5)","decl":{"start":{"line":32,"column":25},"end":{"line":32,"column":26}},"loc":{"start":{"line":32,"column":31},"end":{"line":34,"column":17}},"line":32},"6":{"name":"(anonymous_6)","decl":{"start":{"line":35,"column":21},"end":{"line":35,"column":22}},"loc":{"start":{"line":35,"column":27},"end":{"line":37,"column":13}},"line":35},"7":{"name":"readAllFiles","decl":{"start":{"line":45,"column":9},"end":{"line":45,"column":21}},"loc":{"start":{"line":45,"column":68},"end":{"line":71,"column":1}},"line":45},"8":{"name":"(anonymous_8)","decl":{"start":{"line":46,"column":47},"end":{"line":46,"column":48}},"loc":{"start":{"line":46,"column":65},"end":{"line":70,"column":5}},"line":46},"9":{"name":"(anonymous_9)","decl":{"start":{"line":73,"column":4},"end":{"line":73,"column":5}},"loc":{"start":{"line":73,"column":81},"end":{"line":84,"column":5}},"line":73}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":15,"column":12},"end":{"line":17,"column":13}},"type":"if","locations":[{"start":{"line":15,"column":12},"end":{"line":17,"column":13}},{"start":{"line":15,"column":12},"end":{"line":17,"column":13}}],"line":15},"4":{"loc":{"start":{"line":15,"column":16},"end":{"line":15,"column":67}},"type":"binary-expr","locations":[{"start":{"line":15,"column":16},"end":{"line":15,"column":38}},{"start":{"line":15,"column":42},"end":{"line":15,"column":52}},{"start":{"line":15,"column":56},"end":{"line":15,"column":67}}],"line":15},"5":{"loc":{"start":{"line":19,"column":16},"end":{"line":21,"column":17}},"type":"if","locations":[{"start":{"line":19,"column":16},"end":{"line":21,"column":17}},{"start":{"line":19,"column":16},"end":{"line":21,"column":17}}],"line":19},"6":{"loc":{"start":{"line":50,"column":12},"end":{"line":61,"column":13}},"type":"if","locations":[{"start":{"line":50,"column":12},"end":{"line":61,"column":13}},{"start":{"line":50,"column":12},"end":{"line":61,"column":13}}],"line":50},"7":{"loc":{"start":{"line":54,"column":20},"end":{"line":56,"column":21}},"type":"if","locations":[{"start":{"line":54,"column":20},"end":{"line":56,"column":21}},{"start":{"line":54,"column":20},"end":{"line":56,"column":21}}],"line":54}},"s":{"0":1,"1":2,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":1,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":1},"f":{"0":2,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"b":{"0":[1,1,1],"1":[0,2],"2":[2,2],"3":[0,0],"4":[0,0,0],"5":[0,0],"6":[0,0],"7":[0,0]},"inputSourceMap":{"version":3,"file":"/Users/yexuanjiang/project_team129/src/controller/getCoursesPromise.ts","sources":["/Users/yexuanjiang/project_team129/src/controller/getCoursesPromise.ts"],"names":[],"mappings":"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","sourcesContent":["import {InsightDataset, InsightDatasetKind, InsightError} from \"./IInsightFacade\";\nimport JSZip from \"jszip\";\nimport fs from \"fs\";\n\nlet courseMap = new Map<string, SingleSession []>();\nexport function getCoursesPromise(id: string, content: string, kind: InsightDatasetKind,\n\tids: string [], insightDatasets: any []): Promise<string[]> {\n\treturn new Promise((resolve, reject) => {\n\t\tids.push(id);\n\t\ttry {\n\t\t\tif (id.indexOf(\"_\") !== -1 || id === \" \" || id === \"\\t\") {\n\t\t\t\treject(new InsightError([]));\n\t\t\t}\n\t\t\tfor (let eachData of insightDatasets) {\n\t\t\t\tif (eachData.id === id) {\n\t\t\t\t\treject(new InsightError([]));\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn new JSZip().loadAsync(content, {base64: true})\n\t\t\t\t.then( (zipFile) => {\n\t\t\t\t\tlet keys = Object.keys(zipFile.files);\n\t\t\t\t\tlet asyncReadPromises: Array<Promise<string>> = [];\n\t\t\t\t\tfor (const key of keys) {\n\t\t\t\t\t\tasyncReadPromises.push(zipFile.files[key].async(\"string\"));\n\t\t\t\t\t}\n\t\t\t\t\treturn readAllFiles(asyncReadPromises, id, kind, insightDatasets).then(()=>{\n\t\t\t\t\t\tresolve(ids);\n\t\t\t\t\t}).catch(()=>{\n\t\t\t\t\t\treject(new InsightError([]));\n\t\t\t\t\t});\n\t\t\t\t}).catch(() => {\n\t\t\t\t\treject(new InsightError([]));\n\t\t\t\t});\n\t\t} catch (error) {\n\t\t\treject(new InsightError([]));\n\t\t}\n\t});\n}\n\nfunction readAllFiles(\n\tasyncReadPromises: Array<Promise<string>>, id: string, kind: InsightDatasetKind, insightDatasets: any []) {\n\treturn Promise.all(asyncReadPromises).then((fileContents) => {\n\t\tlet numRows = 0;\n\t\tlet courses: SingleSession [] = [];\n\t\tfor (const eachFileContent of fileContents) {\n\t\t\tif (eachFileContent !== \"\") {\n\t\t\t\tlet JsonObj = JSON.parse(eachFileContent);\n\t\t\t\tfor (const section of JsonObj.result) {\n\t\t\t\t\tlet singleSession = new SingleSession(String(section.Subject),\n\t\t\t\t\t\tString(section.Course), Number(section.Avg),\n\t\t\t\t\t\tString(section.Professor), String(section.Title),\n\t\t\t\t\t\tNumber(section.Pass), Number(section.Fail), Number(section.Audit),\n\t\t\t\t\t\tString(section.id), Number(section.Year));\n\t\t\t\t\tif(String(section.Section) === \"overall\") {\n\t\t\t\t\t\tsingleSession.year = Number(1900);\n\t\t\t\t\t}\n\t\t\t\t\tcourses.push(singleSession);\n\t\t\t\t\tcourseMap.set(id + \"_\" + String(section.Subject) + String(section.Course), courses);\n\t\t\t\t\tnumRows++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tconst insightData: InsightDataset = {\n\t\t\tid,\n\t\t\tkind,\n\t\t\tnumRows,\n\t\t};\n\t\tfs.writeFileSync(\"data/\" + id + \".json\",JSON.stringify(courses));\n\t\tinsightDatasets.push(insightData);\n\t});\n}\n\nexport class SingleSession {\n\tpublic dept: string;\n\tpublic id: string;\n\tpublic avg: number;\n\tpublic instructor: string;\n\tpublic title: string;\n\tpublic pass: number;\n\tpublic fail: number;\n\tpublic audit: number;\n\tpublic uuid: string;\n\tpublic year: number;\n\n\tconstructor(dept: string, id: string, avg: number, instructor: string, title: string,\n\t\tpass: number, fail: number, audit: number, uuid: string, year: number) {\n\t\tthis.dept = dept;\n\t\tthis.id = id;\n\t\tthis.avg = avg;\n\t\tthis.instructor = instructor;\n\t\tthis.title = title;\n\t\tthis.pass = pass;\n\t\tthis.fail = fail;\n\t\tthis.audit = audit;\n\t\tthis.uuid = uuid;\n\t\tthis.year = year;\n\t}\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"8fa3217c7f0385fdb3b369bbf57d4d97520e4f46","contentHash":"3b01428b6c8403f06e91c57d022bd8b4ee158d05f8bf24685f6962ddb3201cc6"},"/Users/yexuanjiang/project_team129/src/controller/getRoomsPromise.ts":{"path":"/Users/yexuanjiang/project_team129/src/controller/getRoomsPromise.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":48}},"4":{"start":{"line":7,"column":25},"end":{"line":7,"column":52}},"5":{"start":{"line":8,"column":16},"end":{"line":8,"column":49}},"6":{"start":{"line":9,"column":17},"end":{"line":9,"column":51}},"7":{"start":{"line":10,"column":13},"end":{"line":10,"column":43}},"8":{"start":{"line":11,"column":15},"end":{"line":11,"column":47}},"9":{"start":{"line":12,"column":19},"end":{"line":12,"column":62}},"10":{"start":{"line":13,"column":17},"end":{"line":13,"column":62}},"11":{"start":{"line":14,"column":22},"end":{"line":14,"column":68}},"12":{"start":{"line":15,"column":17},"end":{"line":15,"column":58}},"13":{"start":{"line":16,"column":21},"end":{"line":16,"column":52}},"14":{"start":{"line":17,"column":20},"end":{"line":17,"column":68}},"15":{"start":{"line":18,"column":22},"end":{"line":18,"column":67}},"16":{"start":{"line":19,"column":14},"end":{"line":19,"column":21}},"17":{"start":{"line":20,"column":11},"end":{"line":20,"column":15}},"18":{"start":{"line":21,"column":11},"end":{"line":21,"column":15}},"19":{"start":{"line":22,"column":20},"end":{"line":22,"column":85}},"20":{"start":{"line":23,"column":28},"end":{"line":23,"column":30}},"21":{"start":{"line":24,"column":18},"end":{"line":24,"column":27}},"22":{"start":{"line":26,"column":4},"end":{"line":54,"column":7}},"23":{"start":{"line":27,"column":8},"end":{"line":53,"column":9}},"24":{"start":{"line":28,"column":12},"end":{"line":48,"column":15}},"25":{"start":{"line":30,"column":16},"end":{"line":45,"column":19}},"26":{"start":{"line":31,"column":20},"end":{"line":31,"column":74}},"27":{"start":{"line":33,"column":20},"end":{"line":33,"column":52}},"28":{"start":{"line":35,"column":46},"end":{"line":35,"column":48}},"29":{"start":{"line":36,"column":20},"end":{"line":43,"column":21}},"30":{"start":{"line":37,"column":24},"end":{"line":42,"column":25}},"31":{"start":{"line":38,"column":41},"end":{"line":38,"column":63}},"32":{"start":{"line":39,"column":28},"end":{"line":41,"column":29}},"33":{"start":{"line":40,"column":32},"end":{"line":40,"column":79}},"34":{"start":{"line":44,"column":20},"end":{"line":44,"column":116}},"35":{"start":{"line":47,"column":16},"end":{"line":47,"column":62}},"36":{"start":{"line":51,"column":12},"end":{"line":51,"column":31}},"37":{"start":{"line":52,"column":12},"end":{"line":52,"column":58}},"38":{"start":{"line":56,"column":0},"end":{"line":56,"column":42}},"39":{"start":{"line":58,"column":18},"end":{"line":58,"column":30}},"40":{"start":{"line":59,"column":24},"end":{"line":63,"column":5}},"41":{"start":{"line":64,"column":4},"end":{"line":64,"column":17}},"42":{"start":{"line":65,"column":4},"end":{"line":65,"column":38}},"43":{"start":{"line":68,"column":4},"end":{"line":81,"column":7}},"44":{"start":{"line":69,"column":8},"end":{"line":69,"column":44}},"45":{"start":{"line":70,"column":24},"end":{"line":70,"column":26}},"46":{"start":{"line":71,"column":20},"end":{"line":71,"column":22}},"47":{"start":{"line":72,"column":8},"end":{"line":72,"column":82}},"48":{"start":{"line":73,"column":8},"end":{"line":75,"column":9}},"49":{"start":{"line":74,"column":12},"end":{"line":74,"column":56}},"50":{"start":{"line":76,"column":8},"end":{"line":76,"column":58}},"51":{"start":{"line":77,"column":8},"end":{"line":77,"column":82}},"52":{"start":{"line":78,"column":8},"end":{"line":78,"column":21}},"53":{"start":{"line":80,"column":8},"end":{"line":80,"column":54}},"54":{"start":{"line":84,"column":4},"end":{"line":86,"column":5}},"55":{"start":{"line":85,"column":8},"end":{"line":85,"column":87}},"56":{"start":{"line":87,"column":4},"end":{"line":87,"column":21}},"57":{"start":{"line":90,"column":4},"end":{"line":93,"column":5}},"58":{"start":{"line":91,"column":8},"end":{"line":91,"column":54}},"59":{"start":{"line":92,"column":8},"end":{"line":92,"column":55}},"60":{"start":{"line":96,"column":19},"end":{"line":96,"column":47}},"61":{"start":{"line":97,"column":20},"end":{"line":97,"column":22}},"62":{"start":{"line":98,"column":4},"end":{"line":130,"column":5}},"63":{"start":{"line":99,"column":8},"end":{"line":128,"column":9}},"64":{"start":{"line":100,"column":12},"end":{"line":127,"column":13}},"65":{"start":{"line":101,"column":31},"end":{"line":101,"column":33}},"66":{"start":{"line":102,"column":30},"end":{"line":102,"column":32}},"67":{"start":{"line":103,"column":32},"end":{"line":103,"column":34}},"68":{"start":{"line":104,"column":16},"end":{"line":125,"column":17}},"69":{"start":{"line":105,"column":20},"end":{"line":107,"column":21}},"70":{"start":{"line":106,"column":24},"end":{"line":106,"column":30}},"71":{"start":{"line":108,"column":20},"end":{"line":124,"column":21}},"72":{"start":{"line":109,"column":36},"end":{"line":109,"column":58}},"73":{"start":{"line":110,"column":24},"end":{"line":112,"column":25}},"74":{"start":{"line":111,"column":28},"end":{"line":111,"column":73}},"75":{"start":{"line":113,"column":24},"end":{"line":115,"column":25}},"76":{"start":{"line":114,"column":28},"end":{"line":114,"column":75}},"77":{"start":{"line":116,"column":24},"end":{"line":123,"column":25}},"78":{"start":{"line":117,"column":28},"end":{"line":122,"column":29}},"79":{"start":{"line":118,"column":32},"end":{"line":121,"column":33}},"80":{"start":{"line":119,"column":36},"end":{"line":119,"column":72}},"81":{"start":{"line":120,"column":36},"end":{"line":120,"column":42}},"82":{"start":{"line":126,"column":16},"end":{"line":126,"column":95}},"83":{"start":{"line":129,"column":8},"end":{"line":129,"column":25}},"84":{"start":{"line":133,"column":27},"end":{"line":133,"column":29}},"85":{"start":{"line":134,"column":4},"end":{"line":136,"column":5}},"86":{"start":{"line":135,"column":8},"end":{"line":135,"column":53}},"87":{"start":{"line":137,"column":4},"end":{"line":137,"column":41}},"88":{"start":{"line":140,"column":4},"end":{"line":164,"column":7}},"89":{"start":{"line":141,"column":24},"end":{"line":141,"column":75}},"90":{"start":{"line":142,"column":8},"end":{"line":163,"column":11}},"91":{"start":{"line":143,"column":12},"end":{"line":143,"column":41}},"92":{"start":{"line":144,"column":29},"end":{"line":144,"column":31}},"93":{"start":{"line":145,"column":12},"end":{"line":145,"column":72}},"94":{"start":{"line":145,"column":47},"end":{"line":145,"column":70}},"95":{"start":{"line":146,"column":12},"end":{"line":162,"column":15}},"96":{"start":{"line":147,"column":16},"end":{"line":161,"column":17}},"97":{"start":{"line":148,"column":38},"end":{"line":148,"column":60}},"98":{"start":{"line":149,"column":20},"end":{"line":157,"column":21}},"99":{"start":{"line":150,"column":24},"end":{"line":153,"column":27}},"100":{"start":{"line":156,"column":24},"end":{"line":156,"column":70}},"101":{"start":{"line":160,"column":20},"end":{"line":160,"column":66}},"102":{"start":{"line":167,"column":16},"end":{"line":167,"column":18}},"103":{"start":{"line":168,"column":4},"end":{"line":170,"column":5}},"104":{"start":{"line":169,"column":8},"end":{"line":169,"column":29}},"105":{"start":{"line":171,"column":4},"end":{"line":176,"column":5}},"106":{"start":{"line":172,"column":8},"end":{"line":175,"column":9}},"107":{"start":{"line":173,"column":31},"end":{"line":173,"column":53}},"108":{"start":{"line":174,"column":12},"end":{"line":174,"column":47}},"109":{"start":{"line":177,"column":4},"end":{"line":177,"column":17}},"110":{"start":{"line":180,"column":4},"end":{"line":186,"column":5}},"111":{"start":{"line":181,"column":28},"end":{"line":181,"column":107}},"112":{"start":{"line":182,"column":8},"end":{"line":185,"column":9}},"113":{"start":{"line":183,"column":27},"end":{"line":183,"column":57}},"114":{"start":{"line":184,"column":12},"end":{"line":184,"column":235}},"115":{"start":{"line":187,"column":4},"end":{"line":187,"column":17}},"116":{"start":{"line":190,"column":19},"end":{"line":190,"column":21}},"117":{"start":{"line":191,"column":4},"end":{"line":234,"column":5}},"118":{"start":{"line":192,"column":8},"end":{"line":232,"column":9}},"119":{"start":{"line":193,"column":12},"end":{"line":231,"column":13}},"120":{"start":{"line":194,"column":16},"end":{"line":230,"column":17}},"121":{"start":{"line":195,"column":33},"end":{"line":195,"column":35}},"122":{"start":{"line":196,"column":32},"end":{"line":196,"column":34}},"123":{"start":{"line":197,"column":31},"end":{"line":197,"column":33}},"124":{"start":{"line":198,"column":36},"end":{"line":198,"column":38}},"125":{"start":{"line":199,"column":31},"end":{"line":199,"column":33}},"126":{"start":{"line":200,"column":20},"end":{"line":222,"column":21}},"127":{"start":{"line":201,"column":24},"end":{"line":221,"column":25}},"128":{"start":{"line":202,"column":40},"end":{"line":202,"column":56}},"129":{"start":{"line":203,"column":28},"end":{"line":211,"column":29}},"130":{"start":{"line":204,"column":32},"end":{"line":210,"column":33}},"131":{"start":{"line":205,"column":36},"end":{"line":209,"column":37}},"132":{"start":{"line":206,"column":40},"end":{"line":206,"column":67}},"133":{"start":{"line":207,"column":40},"end":{"line":207,"column":74}},"134":{"start":{"line":208,"column":40},"end":{"line":208,"column":46}},"135":{"start":{"line":212,"column":28},"end":{"line":214,"column":29}},"136":{"start":{"line":213,"column":32},"end":{"line":213,"column":69}},"137":{"start":{"line":215,"column":28},"end":{"line":217,"column":29}},"138":{"start":{"line":216,"column":32},"end":{"line":216,"column":68}},"139":{"start":{"line":218,"column":28},"end":{"line":220,"column":29}},"140":{"start":{"line":219,"column":32},"end":{"line":219,"column":73}},"141":{"start":{"line":223,"column":20},"end":{"line":229,"column":23}},"142":{"start":{"line":233,"column":8},"end":{"line":233,"column":24}},"143":{"start":{"line":238,"column":8},"end":{"line":238,"column":33}},"144":{"start":{"line":239,"column":8},"end":{"line":239,"column":35}},"145":{"start":{"line":240,"column":8},"end":{"line":240,"column":29}},"146":{"start":{"line":241,"column":8},"end":{"line":241,"column":25}},"147":{"start":{"line":242,"column":8},"end":{"line":242,"column":31}},"148":{"start":{"line":243,"column":8},"end":{"line":243,"column":23}},"149":{"start":{"line":244,"column":8},"end":{"line":244,"column":23}},"150":{"start":{"line":245,"column":8},"end":{"line":245,"column":27}},"151":{"start":{"line":246,"column":8},"end":{"line":246,"column":33}},"152":{"start":{"line":247,"column":8},"end":{"line":247,"column":35}},"153":{"start":{"line":248,"column":8},"end":{"line":248,"column":25}},"154":{"start":{"line":251,"column":0},"end":{"line":251,"column":20}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"getRoomsPromise","decl":{"start":{"line":25,"column":9},"end":{"line":25,"column":24}},"loc":{"start":{"line":25,"column":66},"end":{"line":55,"column":1}},"line":25},"2":{"name":"(anonymous_2)","decl":{"start":{"line":26,"column":23},"end":{"line":26,"column":24}},"loc":{"start":{"line":26,"column":44},"end":{"line":54,"column":5}},"line":26},"3":{"name":"(anonymous_3)","decl":{"start":{"line":29,"column":22},"end":{"line":29,"column":23}},"loc":{"start":{"line":29,"column":35},"end":{"line":46,"column":13}},"line":29},"4":{"name":"(anonymous_4)","decl":{"start":{"line":30,"column":70},"end":{"line":30,"column":71}},"loc":{"start":{"line":30,"column":81},"end":{"line":32,"column":17}},"line":30},"5":{"name":"(anonymous_5)","decl":{"start":{"line":32,"column":24},"end":{"line":32,"column":25}},"loc":{"start":{"line":32,"column":42},"end":{"line":34,"column":17}},"line":32},"6":{"name":"(anonymous_6)","decl":{"start":{"line":34,"column":24},"end":{"line":34,"column":25}},"loc":{"start":{"line":34,"column":39},"end":{"line":45,"column":17}},"line":34},"7":{"name":"(anonymous_7)","decl":{"start":{"line":46,"column":21},"end":{"line":46,"column":22}},"loc":{"start":{"line":46,"column":27},"end":{"line":48,"column":13}},"line":46},"8":{"name":"assignData","decl":{"start":{"line":57,"column":9},"end":{"line":57,"column":19}},"loc":{"start":{"line":57,"column":59},"end":{"line":66,"column":1}},"line":57},"9":{"name":"outputDataFile","decl":{"start":{"line":67,"column":9},"end":{"line":67,"column":23}},"loc":{"start":{"line":67,"column":105},"end":{"line":82,"column":1}},"line":67},"10":{"name":"(anonymous_10)","decl":{"start":{"line":68,"column":42},"end":{"line":68,"column":43}},"loc":{"start":{"line":68,"column":53},"end":{"line":79,"column":5}},"line":68},"11":{"name":"(anonymous_11)","decl":{"start":{"line":79,"column":13},"end":{"line":79,"column":14}},"loc":{"start":{"line":79,"column":19},"end":{"line":81,"column":5}},"line":79},"12":{"name":"getRoomNodes","decl":{"start":{"line":83,"column":9},"end":{"line":83,"column":21}},"loc":{"start":{"line":83,"column":40},"end":{"line":88,"column":1}},"line":83},"13":{"name":"createBuildingListAndMap","decl":{"start":{"line":89,"column":9},"end":{"line":89,"column":33}},"loc":{"start":{"line":89,"column":45},"end":{"line":94,"column":1}},"line":89},"14":{"name":"getBuildingList","decl":{"start":{"line":95,"column":9},"end":{"line":95,"column":24}},"loc":{"start":{"line":95,"column":35},"end":{"line":131,"column":1}},"line":95},"15":{"name":"addGeoInfo","decl":{"start":{"line":132,"column":9},"end":{"line":132,"column":19}},"loc":{"start":{"line":132,"column":34},"end":{"line":138,"column":1}},"line":132},"16":{"name":"getLocation","decl":{"start":{"line":139,"column":9},"end":{"line":139,"column":20}},"loc":{"start":{"line":139,"column":31},"end":{"line":165,"column":1}},"line":139},"17":{"name":"(anonymous_17)","decl":{"start":{"line":140,"column":23},"end":{"line":140,"column":24}},"loc":{"start":{"line":140,"column":50},"end":{"line":164,"column":5}},"line":140},"18":{"name":"(anonymous_18)","decl":{"start":{"line":142,"column":36},"end":{"line":142,"column":37}},"loc":{"start":{"line":142,"column":56},"end":{"line":163,"column":9}},"line":142},"19":{"name":"(anonymous_19)","decl":{"start":{"line":145,"column":32},"end":{"line":145,"column":33}},"loc":{"start":{"line":145,"column":47},"end":{"line":145,"column":70}},"line":145},"20":{"name":"(anonymous_20)","decl":{"start":{"line":146,"column":31},"end":{"line":146,"column":32}},"loc":{"start":{"line":146,"column":37},"end":{"line":162,"column":13}},"line":146},"21":{"name":"getNodeList","decl":{"start":{"line":166,"column":9},"end":{"line":166,"column":20}},"loc":{"start":{"line":166,"column":36},"end":{"line":178,"column":1}},"line":166},"22":{"name":"generateRooms","decl":{"start":{"line":179,"column":9},"end":{"line":179,"column":22}},"loc":{"start":{"line":179,"column":40},"end":{"line":188,"column":1}},"line":179},"23":{"name":"getRoomList","decl":{"start":{"line":189,"column":9},"end":{"line":189,"column":20}},"loc":{"start":{"line":189,"column":32},"end":{"line":235,"column":1}},"line":189},"24":{"name":"(anonymous_24)","decl":{"start":{"line":237,"column":4},"end":{"line":237,"column":5}},"loc":{"start":{"line":237,"column":104},"end":{"line":249,"column":5}},"line":237}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":37,"column":24},"end":{"line":42,"column":25}},"type":"if","locations":[{"start":{"line":37,"column":24},"end":{"line":42,"column":25}},{"start":{"line":37,"column":24},"end":{"line":42,"column":25}}],"line":37},"4":{"loc":{"start":{"line":37,"column":28},"end":{"line":37,"column":86}},"type":"binary-expr","locations":[{"start":{"line":37,"column":28},"end":{"line":37,"column":52}},{"start":{"line":37,"column":56},"end":{"line":37,"column":86}}],"line":37},"5":{"loc":{"start":{"line":39,"column":28},"end":{"line":41,"column":29}},"type":"if","locations":[{"start":{"line":39,"column":28},"end":{"line":41,"column":29}},{"start":{"line":39,"column":28},"end":{"line":41,"column":29}}],"line":39},"6":{"loc":{"start":{"line":73,"column":8},"end":{"line":75,"column":9}},"type":"if","locations":[{"start":{"line":73,"column":8},"end":{"line":75,"column":9}},{"start":{"line":73,"column":8},"end":{"line":75,"column":9}}],"line":73},"7":{"loc":{"start":{"line":100,"column":12},"end":{"line":127,"column":13}},"type":"if","locations":[{"start":{"line":100,"column":12},"end":{"line":127,"column":13}},{"start":{"line":100,"column":12},"end":{"line":127,"column":13}}],"line":100},"8":{"loc":{"start":{"line":105,"column":20},"end":{"line":107,"column":21}},"type":"if","locations":[{"start":{"line":105,"column":20},"end":{"line":107,"column":21}},{"start":{"line":105,"column":20},"end":{"line":107,"column":21}}],"line":105},"9":{"loc":{"start":{"line":105,"column":24},"end":{"line":105,"column":56}},"type":"binary-expr","locations":[{"start":{"line":105,"column":24},"end":{"line":105,"column":32}},{"start":{"line":105,"column":36},"end":{"line":105,"column":43}},{"start":{"line":105,"column":47},"end":{"line":105,"column":56}}],"line":105},"10":{"loc":{"start":{"line":108,"column":20},"end":{"line":124,"column":21}},"type":"if","locations":[{"start":{"line":108,"column":20},"end":{"line":124,"column":21}},{"start":{"line":108,"column":20},"end":{"line":124,"column":21}}],"line":108},"11":{"loc":{"start":{"line":110,"column":24},"end":{"line":112,"column":25}},"type":"if","locations":[{"start":{"line":110,"column":24},"end":{"line":112,"column":25}},{"start":{"line":110,"column":24},"end":{"line":112,"column":25}}],"line":110},"12":{"loc":{"start":{"line":113,"column":24},"end":{"line":115,"column":25}},"type":"if","locations":[{"start":{"line":113,"column":24},"end":{"line":115,"column":25}},{"start":{"line":113,"column":24},"end":{"line":115,"column":25}}],"line":113},"13":{"loc":{"start":{"line":116,"column":24},"end":{"line":123,"column":25}},"type":"if","locations":[{"start":{"line":116,"column":24},"end":{"line":123,"column":25}},{"start":{"line":116,"column":24},"end":{"line":123,"column":25}}],"line":116},"14":{"loc":{"start":{"line":118,"column":32},"end":{"line":121,"column":33}},"type":"if","locations":[{"start":{"line":118,"column":32},"end":{"line":121,"column":33}},{"start":{"line":118,"column":32},"end":{"line":121,"column":33}}],"line":118},"15":{"loc":{"start":{"line":149,"column":20},"end":{"line":157,"column":21}},"type":"if","locations":[{"start":{"line":149,"column":20},"end":{"line":157,"column":21}},{"start":{"line":149,"column":20},"end":{"line":157,"column":21}}],"line":149},"16":{"loc":{"start":{"line":168,"column":4},"end":{"line":170,"column":5}},"type":"if","locations":[{"start":{"line":168,"column":4},"end":{"line":170,"column":5}},{"start":{"line":168,"column":4},"end":{"line":170,"column":5}}],"line":168},"17":{"loc":{"start":{"line":171,"column":4},"end":{"line":176,"column":5}},"type":"if","locations":[{"start":{"line":171,"column":4},"end":{"line":176,"column":5}},{"start":{"line":171,"column":4},"end":{"line":176,"column":5}}],"line":171},"18":{"loc":{"start":{"line":182,"column":8},"end":{"line":185,"column":9}},"type":"if","locations":[{"start":{"line":182,"column":8},"end":{"line":185,"column":9}},{"start":{"line":182,"column":8},"end":{"line":185,"column":9}}],"line":182},"19":{"loc":{"start":{"line":191,"column":4},"end":{"line":234,"column":5}},"type":"if","locations":[{"start":{"line":191,"column":4},"end":{"line":234,"column":5}},{"start":{"line":191,"column":4},"end":{"line":234,"column":5}}],"line":191},"20":{"loc":{"start":{"line":194,"column":16},"end":{"line":230,"column":17}},"type":"if","locations":[{"start":{"line":194,"column":16},"end":{"line":230,"column":17}},{"start":{"line":194,"column":16},"end":{"line":230,"column":17}}],"line":194},"21":{"loc":{"start":{"line":201,"column":24},"end":{"line":221,"column":25}},"type":"if","locations":[{"start":{"line":201,"column":24},"end":{"line":221,"column":25}},{"start":{"line":201,"column":24},"end":{"line":221,"column":25}}],"line":201},"22":{"loc":{"start":{"line":203,"column":28},"end":{"line":211,"column":29}},"type":"if","locations":[{"start":{"line":203,"column":28},"end":{"line":211,"column":29}},{"start":{"line":203,"column":28},"end":{"line":211,"column":29}}],"line":203},"23":{"loc":{"start":{"line":205,"column":36},"end":{"line":209,"column":37}},"type":"if","locations":[{"start":{"line":205,"column":36},"end":{"line":209,"column":37}},{"start":{"line":205,"column":36},"end":{"line":209,"column":37}}],"line":205},"24":{"loc":{"start":{"line":212,"column":28},"end":{"line":214,"column":29}},"type":"if","locations":[{"start":{"line":212,"column":28},"end":{"line":214,"column":29}},{"start":{"line":212,"column":28},"end":{"line":214,"column":29}}],"line":212},"25":{"loc":{"start":{"line":215,"column":28},"end":{"line":217,"column":29}},"type":"if","locations":[{"start":{"line":215,"column":28},"end":{"line":217,"column":29}},{"start":{"line":215,"column":28},"end":{"line":217,"column":29}}],"line":215},"26":{"loc":{"start":{"line":218,"column":28},"end":{"line":220,"column":29}},"type":"if","locations":[{"start":{"line":218,"column":28},"end":{"line":220,"column":29}},{"start":{"line":218,"column":28},"end":{"line":220,"column":29}}],"line":218}},"s":{"0":1,"1":4,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":1,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":1},"f":{"0":4,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0},"b":{"0":[1,1,1],"1":[0,4],"2":[4,4],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0]},"inputSourceMap":{"version":3,"file":"/Users/yexuanjiang/project_team129/src/controller/getRoomsPromise.ts","sources":["/Users/yexuanjiang/project_team129/src/controller/getRoomsPromise.ts"],"names":[],"mappings":"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","sourcesContent":["import {InsightDataset, InsightDatasetKind, InsightError} from \"./IInsightFacade\";\nimport JSZip from \"jszip\";\nimport parse5 from \"parse5\";\nimport fs from \"fs\";\nimport http from \"http\";\n\nconst NUMBERCODE = \"views-field views-field-field-room-number\";\nconst SEATCODE = \"views-field views-field-field-room-capacity\";\nconst FURNITURECODE = \"views-field views-field-field-room-furniture\";\nconst TYPECODE = \"views-field views-field-field-room-type\";\nconst FULLNAMECODE = \"views-field views-field-title\";\nconst ADDRESSCODE = \"views-field views-field-field-building-address\";\nconst SHORTNAMECODE = \"views-field views-field-field-building-code\";\nconst TBODY = \"tbody\";\nconst TD = \"td\";\nconst TR = \"tr\";\nconst HTTPREQUEST = \"http://cs310.students.cs.ubc.ca:11316/api/v1/project_team<129>/\";\nlet buildingShortnameList: any = [];\nlet buildingMap = new Map<string, any>();\n\nexport function getRoomsPromise(id: string, content: string, kind: InsightDatasetKind,\n\tids: string [], insightDatasets: any []): Promise<string[]> {\n\treturn new Promise((resolve, reject) => {\n\t\ttry {\n\t\t\treturn new JSZip().loadAsync(content, {base64: true})\n\t\t\t\t.then((zipFile) => {\n\t\t\t\t\tzipFile.file(\"rooms/index.htm\")?.async(\"string\").then((index: string) => {\n\t\t\t\t\t\treturn getBuildingList(parse5.parse(index));\n\t\t\t\t\t}).then((buildingList) =>{\n\t\t\t\t\t\treturn addGeoInfo(buildingList);\n\t\t\t\t\t}).then((buildings) => {\n\t\t\t\t\t\tlet fileResolvePromises: Array<Promise<any>> = [];\n\t\t\t\t\t\tfor (let filename in zipFile.files) {\n\t\t\t\t\t\t\tif (filename !== \"index.htm\" && zipFile.file(filename) != null) {\n\t\t\t\t\t\t\t\tconst file = zipFile.file(filename);\n\t\t\t\t\t\t\t\tif(file) {\n\t\t\t\t\t\t\t\t\tfileResolvePromises.push(file.async(\"string\"));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\toutputDataFile(fileResolvePromises, buildings, id, kind, ids, insightDatasets, resolve, reject);\n\t\t\t\t\t});\n\t\t\t\t}).catch(() => {\n\t\t\t\t\treject(new InsightError([]));\n\t\t\t\t});\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t\treject(new InsightError([]));\n\t\t}\n\t});\n}\n\nfunction assignData(id: string, kind: InsightDatasetKind, ids: string[], insightDatasets: any[], rooms: any[]) {\n\tlet numRows = rooms.length;\n\tconst insightData: InsightDataset = {\n\t\tid,\n\t\tkind,\n\t\tnumRows,\n\t};\n\tids.push(id);\n\tinsightDatasets.push(insightData);\n}\n\nfunction outputDataFile(fileResolvePromises: Array<Promise<any>>,\n\tbuildings: any, id: string, kind: InsightDatasetKind,\n\tids: string[], insightDatasets: any[],\n\tresolve: (value: (PromiseLike<string[]> | string[])) => void, reject: (reason?: any) => void) {\n\tPromise.all(fileResolvePromises).then((files: string[]) => {\n\t\tcreateBuildingListAndMap(buildings);\n\t\tlet roomNodes: any = [];\n\t\tlet rooms: any[] = [];\n\t\trooms = generateRooms(getRoomList(getRoomNodes(files, roomNodes)), rooms);\n\t\tif (rooms.length === 0) {\n\t\t\tthrow new InsightError([]);\n\t\t}\n\t\tassignData(id, kind, ids, insightDatasets, rooms);\n\t\tfs.writeFileSync(\"data/\" + id + \".json\", JSON.stringify(rooms));\n\t\tresolve(ids);\n\t}).catch(() => {\n\t\treject(new InsightError([]));\n\t});\n}\n\nfunction getRoomNodes(files: string[], roomNodes: any) {\n\tfor (let file of files) {\n\t\troomNodes = roomNodes.concat(getNodeList(parse5.parse(file), TBODY));\n\t}\n\treturn roomNodes;\n}\n\n\nfunction createBuildingListAndMap(buildings: any []): void{\n\tfor (let building of buildings) {\n\t\tbuildingMap.set(building.shortname,building);\n\t\tbuildingShortnameList.push(building.shortname);\n\t}\n}\n\nfunction getBuildingList(document: any): any {\n\tlet nodeList = getNodeList(document, TBODY);\n\tlet buildings: any = [];\n\tfor (let node of nodeList) {\n\t\tfor (let child of node.childNodes) {\n\t\t\tif (child.nodeName === TR) {\n\t\t\t\tlet fullname: string = \"\";\n\t\t\t\tlet address: string = \"\";\n\t\t\t\tlet shortname: string = \"\";\n\t\t\t\tfor (let element of child.childNodes) {\n\t\t\t\t\tif (fullname && address && shortname) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tif (element.nodeName === TD) {\n\t\t\t\t\t\tlet value = element.attrs[0].value;\n\t\t\t\t\t\tif (ADDRESSCODE === value) {\n\t\t\t\t\t\t\taddress = element.childNodes[0].value.trim();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (SHORTNAMECODE === value) {\n\t\t\t\t\t\t\tshortname = element.childNodes[0].value.trim();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (FULLNAMECODE === value) {\n\t\t\t\t\t\t\tfor (let attr of element.childNodes) {\n\t\t\t\t\t\t\t\tif (attr.nodeName === \"a\") {\n\t\t\t\t\t\t\t\t\tfullname = attr.childNodes[0].value;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbuildings.push({fullname: fullname, address: address, shortname: shortname});\n\t\t\t}\n\t\t}\n\t\treturn buildings;\n\t}\n}\n\nfunction addGeoInfo(buildingList: any): Promise<any> {\n\tlet buildingPromises: any[] = [];\n\tfor (let building of buildingList) {\n\t\tbuildingPromises.push(getLocation(building));\n\t}\n\treturn Promise.all(buildingPromises);\n}\n\nfunction getLocation(building: any) {\n\treturn new Promise(function (resolve, reject) {\n\t\tconst request = HTTPREQUEST + building.address.replace(/ /g, \"%20\");\n\t\thttp.get(request, function (response: any) {\n\t\t\tresponse.setEncoding(\"utf8\");\n\t\t\tlet coordinate = \"\";\n\t\t\tresponse.on(\"data\", (latAndLon: string) => coordinate += latAndLon);\n\t\t\tresponse.on(\"end\", ()=> {\n\t\t\t\ttry {\n\t\t\t\t\tlet geoResponse = JSON.parse(coordinate);\n\t\t\t\t\tif (!geoResponse.error) {\n\t\t\t\t\t\tresolve({\n\t\t\t\t\t\t\tfullname: building.fullname, address: building.address, shortname: building.shortname,\n\t\t\t\t\t\t\tlat: geoResponse.lat, lon: geoResponse.lon\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\treject(new InsightError([]));\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {\n\t\t\t\t\treject(new InsightError([]));\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t});\n}\n\nfunction getNodeList(document: any, tag: string): any[]{\n\tlet nodes = [];\n\tif (document.tagName === tag) {\n\t\tnodes.push(document);\n\t}\n\tif (Object.keys(document).includes(\"childNodes\")) {\n\t\tfor (let node of document.childNodes) {\n\t\t\tlet childrenList: any = getNodeList(node, tag);\n\t\t\tnodes = nodes.concat(childrenList);\n\t\t}\n\t}\n\treturn nodes;\n}\n\nfunction generateRooms(roomList: any, rooms: any): any[]{\n\tfor (let room of roomList) {\n\t\tlet roomShortName = room.href.substring(room.href.lastIndexOf(\"/\") + 1, room.href.lastIndexOf(\"-\"));\n\t\tif (buildingShortnameList.includes(roomShortName)) {\n\t\t\tlet building = buildingMap.get(roomShortName);\n\t\t\trooms.push(new Room(building.fullname, building.shortname, room.number,\n\t\t\t\tbuilding.shortname + \"_\" + room.number, building.address,\n\t\t\t\tbuilding.lat, building.lon, parseInt(room.seats, 10), room.type, room.furniture, room.href));\n\t\t}\n\t}\n\treturn rooms;\n}\n\nfunction getRoomList(roomNodes: any): any {\n\tlet roomList: Array<{number: string, seats: string, type: string, furniture: string, href: string}> = [];\n\tif (roomNodes.length !== 0) {\n\t\tfor (let node of roomNodes) {\n\t\t\tfor (let child of node.childNodes) {\n\t\t\t\tif (child.nodeName === TR) {\n\t\t\t\t\tlet number: string = \"\";\n\t\t\t\t\tlet seats: string = \"\";\n\t\t\t\t\tlet type: string = \"\";\n\t\t\t\t\tlet furniture: string = \"\";\n\t\t\t\t\tlet href: string = \"\";\n\t\t\t\t\tfor (let c of child.childNodes) {\n\t\t\t\t\t\tif (c.nodeName === TD) {\n\t\t\t\t\t\t\tlet value = c.attrs[0].value;\n\t\t\t\t\t\t\tif (value === NUMBERCODE) {\n\t\t\t\t\t\t\t\tfor (let attr of c.childNodes) {\n\t\t\t\t\t\t\t\t\tif (attr.nodeName === \"a\") {\n\t\t\t\t\t\t\t\t\t\thref = attr.attrs[0].value;\n\t\t\t\t\t\t\t\t\t\tnumber = attr.childNodes[0].value;\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (SEATCODE === value) {\n\t\t\t\t\t\t\t\tseats = c.childNodes[0].value.trim();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (TYPECODE === value) {\n\t\t\t\t\t\t\t\ttype = c.childNodes[0].value.trim();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (FURNITURECODE === value) {\n\t\t\t\t\t\t\t\tfurniture = c.childNodes[0].value.trim();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\troomList.push({\n\t\t\t\t\t\tnumber: number,\n\t\t\t\t\t\tseats: seats,\n\t\t\t\t\t\ttype: type,\n\t\t\t\t\t\tfurniture: furniture,\n\t\t\t\t\t\thref: href\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn roomList;\n\t}\n}\n\nexport class Room {\n\tprivate fullname: string;\n\tprivate shortname: string;\n\tprivate number: string;\n\tprivate name: string;\n\tprivate address: string;\n\tprivate lat: number;\n\tprivate lon: number;\n\tprivate seats: number;\n\tprivate roomType: string;\n\tprivate furniture: string;\n\tprivate href: string;\n\tconstructor(fullname: string, shortname: string,\n\t\tnumber: string, name: string,\n\t\taddress: string, lat: number, lon: number,\n\t\tseats: number, roomType: string, furniture: string,\n\t\thref: string) {\n\t\tthis.fullname = fullname;\n\t\tthis.shortname = shortname;\n\t\tthis.number = number;\n\t\tthis.name = name;\n\t\tthis.address = address;\n\t\tthis.lat = lat;\n\t\tthis.lon = lon;\n\t\tthis.seats = seats;\n\t\tthis.roomType = roomType;\n\t\tthis.furniture = furniture;\n\t\tthis.href = href;\n\t}\n}\n\n\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"3174ecc23bf70de335cb611f47957ae0af70ca51","contentHash":"f2bbdc74110930ea6c3de452d2ae4f0b142c0340b915846e20c6a0f5453391e7"},"/Users/yexuanjiang/project_team129/src/controller/queryEngine/Query.ts":{"path":"/Users/yexuanjiang/project_team129/src/controller/queryEngine/Query.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":46}},"4":{"start":{"line":7,"column":25},"end":{"line":7,"column":53}},"5":{"start":{"line":8,"column":15},"end":{"line":8,"column":32}},"6":{"start":{"line":9,"column":18},"end":{"line":9,"column":38}},"7":{"start":{"line":10,"column":13},"end":{"line":10,"column":43}},"8":{"start":{"line":13,"column":8},"end":{"line":13,"column":27}},"9":{"start":{"line":15,"column":8},"end":{"line":20,"column":9}},"10":{"start":{"line":16,"column":12},"end":{"line":16,"column":36}},"11":{"start":{"line":19,"column":12},"end":{"line":19,"column":82}},"12":{"start":{"line":21,"column":20},"end":{"line":21,"column":29}},"13":{"start":{"line":22,"column":8},"end":{"line":24,"column":9}},"14":{"start":{"line":23,"column":12},"end":{"line":23,"column":75}},"15":{"start":{"line":25,"column":8},"end":{"line":30,"column":9}},"16":{"start":{"line":26,"column":12},"end":{"line":26,"column":62}},"17":{"start":{"line":29,"column":12},"end":{"line":29,"column":69}},"18":{"start":{"line":31,"column":8},"end":{"line":36,"column":9}},"19":{"start":{"line":32,"column":12},"end":{"line":32,"column":73}},"20":{"start":{"line":35,"column":12},"end":{"line":35,"column":71}},"21":{"start":{"line":39,"column":8},"end":{"line":39,"column":99}},"22":{"start":{"line":42,"column":0},"end":{"line":42,"column":22}},"23":{"start":{"line":43,"column":0},"end":{"line":43,"column":16}},"24":{"start":{"line":45,"column":16},"end":{"line":45,"column":31}},"25":{"start":{"line":46,"column":23},"end":{"line":46,"column":39}},"26":{"start":{"line":47,"column":25},"end":{"line":47,"column":55}},"27":{"start":{"line":48,"column":4},"end":{"line":50,"column":5}},"28":{"start":{"line":49,"column":8},"end":{"line":49,"column":100}},"29":{"start":{"line":51,"column":23},"end":{"line":51,"column":58}},"30":{"start":{"line":52,"column":4},"end":{"line":57,"column":7}},"31":{"start":{"line":53,"column":8},"end":{"line":56,"column":12}},"32":{"start":{"line":54,"column":28},"end":{"line":54,"column":58}},"33":{"start":{"line":55,"column":12},"end":{"line":55,"column":38}},"34":{"start":{"line":59,"column":0},"end":{"line":59,"column":36}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":12,"column":4},"end":{"line":12,"column":5}},"loc":{"start":{"line":12,"column":23},"end":{"line":37,"column":5}},"line":12},"2":{"name":"(anonymous_2)","decl":{"start":{"line":38,"column":4},"end":{"line":38,"column":5}},"loc":{"start":{"line":38,"column":15},"end":{"line":40,"column":5}},"line":38},"3":{"name":"performQuery","decl":{"start":{"line":44,"column":9},"end":{"line":44,"column":21}},"loc":{"start":{"line":44,"column":28},"end":{"line":58,"column":1}},"line":44},"4":{"name":"(anonymous_4)","decl":{"start":{"line":52,"column":26},"end":{"line":52,"column":27}},"loc":{"start":{"line":52,"column":36},"end":{"line":57,"column":5}},"line":52},"5":{"name":"(anonymous_5)","decl":{"start":{"line":53,"column":59},"end":{"line":53,"column":60}},"loc":{"start":{"line":53,"column":81},"end":{"line":56,"column":9}},"line":53}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":22,"column":8},"end":{"line":24,"column":9}},"type":"if","locations":[{"start":{"line":22,"column":8},"end":{"line":24,"column":9}},{"start":{"line":22,"column":8},"end":{"line":24,"column":9}}],"line":22},"4":{"loc":{"start":{"line":22,"column":12},"end":{"line":22,"column":34}},"type":"binary-expr","locations":[{"start":{"line":22,"column":12},"end":{"line":22,"column":21}},{"start":{"line":22,"column":25},"end":{"line":22,"column":34}}],"line":22},"5":{"loc":{"start":{"line":25,"column":8},"end":{"line":30,"column":9}},"type":"if","locations":[{"start":{"line":25,"column":8},"end":{"line":30,"column":9}},{"start":{"line":25,"column":8},"end":{"line":30,"column":9}}],"line":25},"6":{"loc":{"start":{"line":31,"column":8},"end":{"line":36,"column":9}},"type":"if","locations":[{"start":{"line":31,"column":8},"end":{"line":36,"column":9}},{"start":{"line":31,"column":8},"end":{"line":36,"column":9}}],"line":31},"7":{"loc":{"start":{"line":48,"column":4},"end":{"line":50,"column":5}},"type":"if","locations":[{"start":{"line":48,"column":4},"end":{"line":50,"column":5}},{"start":{"line":48,"column":4},"end":{"line":50,"column":5}}],"line":48}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":1,"23":1,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":1},"f":{"0":1,"1":0,"2":0,"3":0,"4":0,"5":0},"b":{"0":[1,1,1],"1":[0,1],"2":[1,1],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0]},"inputSourceMap":{"version":3,"file":"/Users/yexuanjiang/project_team129/src/controller/queryEngine/Query.ts","sources":["/Users/yexuanjiang/project_team129/src/controller/queryEngine/Query.ts"],"names":[],"mappings":";;;;;;AAAA,sDAAoE;AACpE,iCAA4B;AAC5B,uCAAkC;AAClC,4CAAoB;AAEpB,MAAa,KAAK;IASjB,YAAY,KAAU;QAHf,aAAQ,GAAW,EAAE,CAAC;QAI5B,IAAI,EAAE,CAAC;QACP,IAAI;YACH,EAAE,GAAG,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SACxB;QAAC,OAAO,CAAC,EAAE;YACX,MAAM,IAAI,6BAAY,CAAC,4BAA4B,CAAC,CAAC;SACrD;QACD,MAAM,GAAG,GAAG,EAAE,CAAC,MAAM,CAAC;QACtB,IAAI,GAAG,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,EAAE;YAC3B,MAAM,IAAI,6BAAY,CAAC,qBAAqB,CAAC,CAAC;SAC9C;QACD,IAAI,EAAE,CAAC,CAAC,CAAC,KAAK,OAAO,EAAE;YACtB,IAAI,CAAC,IAAI,GAAG,IAAI,WAAI,CAAC,KAAK,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,CAAC;SAC3C;aAAM;YACN,MAAM,IAAI,6BAAY,CAAC,eAAe,CAAC,CAAC;SACxC;QACD,IAAI,EAAE,CAAC,CAAC,CAAC,KAAK,SAAS,EAAE;YACxB,IAAI,CAAC,OAAO,GAAG,IAAI,iBAAO,CAAC,KAAK,CAAC,SAAS,CAAC,EAAE,IAAI,CAAC,CAAC;SACnD;aAAM;YACN,MAAM,IAAI,6BAAY,CAAC,iBAAiB,CAAC,CAAC;SAC1C;IAOF,CAAC;IAEM,QAAQ;QACd,OAAO,IAAI,CAAC,KAAK,CAAC,YAAE,CAAC,YAAY,CAAC,OAAO,GAAG,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC;IAClF,CAAC;;AAxCF,sBAyCC;AAlCc,UAAI,GAAU,EAAE,CAAC;AAoChC,SAAgB,YAAY,CAAC,IAAW;IACvC,IAAI,KAAK,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,CAAC;IAC5B,MAAM,UAAU,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAC;IACpC,MAAM,YAAY,GAAG,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;IACpD,IAAI,YAAY,CAAC,MAAM,GAAG,IAAI,EAAE;QAC/B,MAAM,IAAI,oCAAmB,CAAC,YAAY,GAAG,YAAY,CAAC,MAAM,GAAG,MAAM,CAAC,CAAC;KAC3E;IACD,MAAM,UAAU,GAAG,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;IACvD,OAAO,UAAU,CAAC,GAAG,CAAC,CAAC,IAAS,EAAE,EAAE;QACnC,OAAO,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,OAAO,EAAC,KAAK,CAAC,EAAE,EAAE;YACtE,IAAI,SAAS,GAAG,KAAK,CAAC,QAAQ,GAAG,GAAG,GAAG,OAAO,CAAC;YAC/C,OAAO,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;QAC3B,CAAC,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACJ,CAAC;AAdD,oCAcC","sourcesContent":["import {InsightError, ResultTooLargeError} from \"../IInsightFacade\";\nimport {Body} from \"./Body\";\nimport {Options} from \"./Options\";\nimport fs from \"fs\";\n\nexport class Query{\n\tpublic body: Body;\n\tpublic options: Options;\n\t// TODO\n\t// public transformation: Transformation;\n\n\tpublic idString: string = \"\";\n\tpublic static data: any[] = [];\n\n\tconstructor(query: any) {\n\t\tlet ks;\n\t\ttry {\n\t\t\tks = Object.keys(query);\n\t\t} catch (e) {\n\t\t\tthrow new InsightError(\"query is null or undifined\");\n\t\t}\n\t\tconst len = ks.length;\n\t\tif (len !== 2 && len !== 3) {\n\t\t\tthrow new InsightError(\"missing query parts\");\n\t\t}\n\t\tif (ks[0] === \"WHERE\") {\n\t\t\tthis.body = new Body(query[\"WHERE\"], this);\n\t\t} else {\n\t\t\tthrow new InsightError(\"Missing WHERE\");\n\t\t}\n\t\tif (ks[1] === \"OPTIONS\") {\n\t\t\tthis.options = new Options(query[\"OPTIONS\"], this);\n\t\t} else {\n\t\t\tthrow new InsightError(\"Missing OPTIONS\");\n\t\t}\n\t\t// TODO\n\t\t// if (len === 3 && ks[2] === \"WHERE\") {\n\t\t// \tthis.transformation = new Transformation(query[\"TRANSFORMATION\"]);\n\t\t// } else {\n\t\t// \tthrow new InsightError(\"Missing TRANSFORMATION\");\n\t\t// }\n\t}\n\n\tpublic loadData(): any[] {\n\t\treturn JSON.parse(fs.readFileSync(\"data/\" + this.idString + \".json\").toString());\n\t}\n}\n\nexport function performQuery(newQ: any[]): any[]{\n\tlet query = new Query(newQ);\n\tconst loadedData = query.loadData();\n\tconst filteredData = query.body.perform(loadedData);\n\tif (filteredData.length > 5000) {\n\t\tthrow new ResultTooLargeError(\"result has\" + filteredData.length + \"rows\");\n\t}\n\tconst sortedData = query.options.perform(filteredData);\n\treturn sortedData.map((item: any) => {\n\t\treturn Object.fromEntries(Object.entries(item).map(([colName,value]) => {\n\t\t\tlet idColName = query.idString + \"_\" + colName;\n\t\t\treturn [idColName, value];\n\t\t}));\n\t});\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"0c58bef929b4920dfaf08a10f24956e0da7eb02d","contentHash":"b10600b27b3cac59f8541b511c02b94cbdce69ec7a3ce2ca0f9c05b64c0ac68f"},"/Users/yexuanjiang/project_team129/src/controller/queryEngine/Body.ts":{"path":"/Users/yexuanjiang/project_team129/src/controller/queryEngine/Body.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":22}},"2":{"start":{"line":4,"column":25},"end":{"line":4,"column":53}},"3":{"start":{"line":5,"column":14},"end":{"line":5,"column":30}},"4":{"start":{"line":8,"column":8},"end":{"line":8,"column":23}},"5":{"start":{"line":10,"column":8},"end":{"line":15,"column":9}},"6":{"start":{"line":11,"column":12},"end":{"line":11,"column":35}},"7":{"start":{"line":14,"column":12},"end":{"line":14,"column":88}},"8":{"start":{"line":16,"column":20},"end":{"line":16,"column":29}},"9":{"start":{"line":17,"column":8},"end":{"line":24,"column":9}},"10":{"start":{"line":18,"column":12},"end":{"line":18,"column":46}},"11":{"start":{"line":21,"column":12},"end":{"line":23,"column":13}},"12":{"start":{"line":22,"column":16},"end":{"line":22,"column":72}},"13":{"start":{"line":27,"column":8},"end":{"line":32,"column":9}},"14":{"start":{"line":28,"column":12},"end":{"line":28,"column":60}},"15":{"start":{"line":31,"column":12},"end":{"line":31,"column":24}},"16":{"start":{"line":35,"column":0},"end":{"line":35,"column":20}},"17":{"start":{"line":37,"column":13},"end":{"line":37,"column":32}},"18":{"start":{"line":38,"column":14},"end":{"line":38,"column":23}},"19":{"start":{"line":39,"column":4},"end":{"line":41,"column":5}},"20":{"start":{"line":40,"column":8},"end":{"line":40,"column":83}},"21":{"start":{"line":42,"column":12},"end":{"line":42,"column":17}},"22":{"start":{"line":43,"column":4},"end":{"line":57,"column":5}},"23":{"start":{"line":44,"column":8},"end":{"line":44,"column":49}},"24":{"start":{"line":46,"column":9},"end":{"line":57,"column":5}},"25":{"start":{"line":47,"column":8},"end":{"line":47,"column":45}},"26":{"start":{"line":49,"column":9},"end":{"line":57,"column":5}},"27":{"start":{"line":50,"column":8},"end":{"line":50,"column":45}},"28":{"start":{"line":52,"column":9},"end":{"line":57,"column":5}},"29":{"start":{"line":53,"column":8},"end":{"line":53,"column":42}},"30":{"start":{"line":56,"column":8},"end":{"line":56,"column":50}},"31":{"start":{"line":61,"column":8},"end":{"line":63,"column":9}},"32":{"start":{"line":62,"column":12},"end":{"line":62,"column":80}},"33":{"start":{"line":64,"column":8},"end":{"line":64,"column":28}},"34":{"start":{"line":65,"column":8},"end":{"line":65,"column":67}},"35":{"start":{"line":66,"column":8},"end":{"line":66,"column":52}},"36":{"start":{"line":69,"column":8},"end":{"line":71,"column":9}},"37":{"start":{"line":70,"column":12},"end":{"line":70,"column":99}},"38":{"start":{"line":72,"column":18},"end":{"line":72,"column":20}},"39":{"start":{"line":73,"column":8},"end":{"line":75,"column":9}},"40":{"start":{"line":74,"column":12},"end":{"line":74,"column":39}},"41":{"start":{"line":76,"column":8},"end":{"line":76,"column":19}},"42":{"start":{"line":81,"column":8},"end":{"line":83,"column":11}},"43":{"start":{"line":82,"column":12},"end":{"line":82,"column":37}},"44":{"start":{"line":84,"column":8},"end":{"line":89,"column":9}},"45":{"start":{"line":85,"column":12},"end":{"line":85,"column":62}},"46":{"start":{"line":85,"column":39},"end":{"line":85,"column":60}},"47":{"start":{"line":85,"column":46},"end":{"line":85,"column":60}},"48":{"start":{"line":88,"column":12},"end":{"line":88,"column":62}},"49":{"start":{"line":88,"column":39},"end":{"line":88,"column":60}},"50":{"start":{"line":88,"column":46},"end":{"line":88,"column":60}},"51":{"start":{"line":90,"column":8},"end":{"line":90,"column":17}},"52":{"start":{"line":95,"column":8},"end":{"line":97,"column":9}},"53":{"start":{"line":96,"column":12},"end":{"line":96,"column":76}},"54":{"start":{"line":98,"column":8},"end":{"line":98,"column":28}},"55":{"start":{"line":99,"column":17},"end":{"line":99,"column":39}},"56":{"start":{"line":100,"column":18},"end":{"line":100,"column":27}},"57":{"start":{"line":101,"column":8},"end":{"line":103,"column":9}},"58":{"start":{"line":102,"column":12},"end":{"line":102,"column":76}},"59":{"start":{"line":104,"column":19},"end":{"line":104,"column":43}},"60":{"start":{"line":105,"column":8},"end":{"line":105,"column":32}},"61":{"start":{"line":106,"column":8},"end":{"line":106,"column":39}},"62":{"start":{"line":107,"column":8},"end":{"line":107,"column":52}},"63":{"start":{"line":110,"column":25},"end":{"line":110,"column":40}},"64":{"start":{"line":111,"column":20},"end":{"line":111,"column":30}},"65":{"start":{"line":112,"column":21},"end":{"line":112,"column":32}},"66":{"start":{"line":113,"column":20},"end":{"line":115,"column":9}},"67":{"start":{"line":114,"column":12},"end":{"line":114,"column":47}},"68":{"start":{"line":116,"column":23},"end":{"line":118,"column":9}},"69":{"start":{"line":117,"column":12},"end":{"line":117,"column":40}},"70":{"start":{"line":119,"column":26},"end":{"line":121,"column":9}},"71":{"start":{"line":120,"column":12},"end":{"line":120,"column":40}},"72":{"start":{"line":122,"column":8},"end":{"line":130,"column":9}},"73":{"start":{"line":123,"column":12},"end":{"line":123,"column":28}},"74":{"start":{"line":125,"column":13},"end":{"line":130,"column":9}},"75":{"start":{"line":126,"column":12},"end":{"line":126,"column":31}},"76":{"start":{"line":129,"column":12},"end":{"line":129,"column":25}},"77":{"start":{"line":135,"column":8},"end":{"line":137,"column":9}},"78":{"start":{"line":136,"column":12},"end":{"line":136,"column":77}},"79":{"start":{"line":138,"column":8},"end":{"line":138,"column":28}},"80":{"start":{"line":139,"column":17},"end":{"line":139,"column":39}},"81":{"start":{"line":140,"column":18},"end":{"line":140,"column":27}},"82":{"start":{"line":141,"column":8},"end":{"line":143,"column":9}},"83":{"start":{"line":142,"column":12},"end":{"line":142,"column":76}},"84":{"start":{"line":144,"column":19},"end":{"line":144,"column":43}},"85":{"start":{"line":145,"column":8},"end":{"line":145,"column":32}},"86":{"start":{"line":146,"column":8},"end":{"line":146,"column":44}},"87":{"start":{"line":147,"column":8},"end":{"line":147,"column":52}},"88":{"start":{"line":150,"column":20},"end":{"line":150,"column":21}},"89":{"start":{"line":151,"column":8},"end":{"line":153,"column":9}},"90":{"start":{"line":152,"column":12},"end":{"line":152,"column":35}},"91":{"start":{"line":154,"column":8},"end":{"line":156,"column":9}},"92":{"start":{"line":155,"column":12},"end":{"line":155,"column":53}},"93":{"start":{"line":157,"column":8},"end":{"line":157,"column":64}},"94":{"start":{"line":160,"column":25},"end":{"line":160,"column":40}},"95":{"start":{"line":161,"column":20},"end":{"line":161,"column":30}},"96":{"start":{"line":162,"column":23},"end":{"line":162,"column":39}},"97":{"start":{"line":163,"column":8},"end":{"line":165,"column":9}},"98":{"start":{"line":164,"column":12},"end":{"line":164,"column":98}},"99":{"start":{"line":167,"column":8},"end":{"line":187,"column":9}},"100":{"start":{"line":168,"column":30},"end":{"line":168,"column":68}},"101":{"start":{"line":169,"column":12},"end":{"line":171,"column":14}},"102":{"start":{"line":170,"column":16},"end":{"line":170,"column":77}},"103":{"start":{"line":173,"column":13},"end":{"line":187,"column":9}},"104":{"start":{"line":174,"column":12},"end":{"line":176,"column":14}},"105":{"start":{"line":175,"column":16},"end":{"line":175,"column":65}},"106":{"start":{"line":178,"column":13},"end":{"line":187,"column":9}},"107":{"start":{"line":179,"column":12},"end":{"line":181,"column":14}},"108":{"start":{"line":180,"column":16},"end":{"line":180,"column":88}},"109":{"start":{"line":184,"column":12},"end":{"line":186,"column":14}},"110":{"start":{"line":185,"column":16},"end":{"line":185,"column":50}},"111":{"start":{"line":188,"column":8},"end":{"line":188,"column":17}},"112":{"start":{"line":193,"column":8},"end":{"line":195,"column":9}},"113":{"start":{"line":194,"column":12},"end":{"line":194,"column":72}},"114":{"start":{"line":196,"column":8},"end":{"line":196,"column":32}},"115":{"start":{"line":197,"column":8},"end":{"line":197,"column":51}},"116":{"start":{"line":198,"column":8},"end":{"line":198,"column":52}},"117":{"start":{"line":201,"column":24},"end":{"line":201,"column":51}},"118":{"start":{"line":202,"column":20},"end":{"line":202,"column":39}},"119":{"start":{"line":202,"column":27},"end":{"line":202,"column":39}},"120":{"start":{"line":202,"column":34},"end":{"line":202,"column":39}},"121":{"start":{"line":203,"column":8},"end":{"line":203,"column":30}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":7,"column":4},"end":{"line":7,"column":5}},"loc":{"start":{"line":7,"column":25},"end":{"line":25,"column":5}},"line":7},"1":{"name":"(anonymous_1)","decl":{"start":{"line":26,"column":4},"end":{"line":26,"column":5}},"loc":{"start":{"line":26,"column":18},"end":{"line":33,"column":5}},"line":26},"2":{"name":"makeFilter","decl":{"start":{"line":36,"column":9},"end":{"line":36,"column":19}},"loc":{"start":{"line":36,"column":31},"end":{"line":58,"column":1}},"line":36},"3":{"name":"(anonymous_3)","decl":{"start":{"line":60,"column":4},"end":{"line":60,"column":5}},"loc":{"start":{"line":60,"column":30},"end":{"line":67,"column":5}},"line":60},"4":{"name":"(anonymous_4)","decl":{"start":{"line":68,"column":4},"end":{"line":68,"column":5}},"loc":{"start":{"line":68,"column":31},"end":{"line":77,"column":5}},"line":68},"5":{"name":"(anonymous_5)","decl":{"start":{"line":78,"column":4},"end":{"line":78,"column":5}},"loc":{"start":{"line":78,"column":20},"end":{"line":91,"column":5}},"line":78},"6":{"name":"(anonymous_6)","decl":{"start":{"line":81,"column":33},"end":{"line":81,"column":34}},"loc":{"start":{"line":81,"column":46},"end":{"line":83,"column":9}},"line":81},"7":{"name":"(anonymous_7)","decl":{"start":{"line":85,"column":27},"end":{"line":85,"column":28}},"loc":{"start":{"line":85,"column":39},"end":{"line":85,"column":60}},"line":85},"8":{"name":"(anonymous_8)","decl":{"start":{"line":85,"column":39},"end":{"line":85,"column":40}},"loc":{"start":{"line":85,"column":46},"end":{"line":85,"column":60}},"line":85},"9":{"name":"(anonymous_9)","decl":{"start":{"line":88,"column":27},"end":{"line":88,"column":28}},"loc":{"start":{"line":88,"column":39},"end":{"line":88,"column":60}},"line":88},"10":{"name":"(anonymous_10)","decl":{"start":{"line":88,"column":39},"end":{"line":88,"column":40}},"loc":{"start":{"line":88,"column":46},"end":{"line":88,"column":60}},"line":88},"11":{"name":"(anonymous_11)","decl":{"start":{"line":94,"column":4},"end":{"line":94,"column":5}},"loc":{"start":{"line":94,"column":30},"end":{"line":108,"column":5}},"line":94},"12":{"name":"(anonymous_12)","decl":{"start":{"line":109,"column":4},"end":{"line":109,"column":5}},"loc":{"start":{"line":109,"column":20},"end":{"line":131,"column":5}},"line":109},"13":{"name":"(anonymous_13)","decl":{"start":{"line":113,"column":20},"end":{"line":113,"column":21}},"loc":{"start":{"line":113,"column":30},"end":{"line":115,"column":9}},"line":113},"14":{"name":"(anonymous_14)","decl":{"start":{"line":116,"column":23},"end":{"line":116,"column":24}},"loc":{"start":{"line":116,"column":33},"end":{"line":118,"column":9}},"line":116},"15":{"name":"(anonymous_15)","decl":{"start":{"line":119,"column":26},"end":{"line":119,"column":27}},"loc":{"start":{"line":119,"column":36},"end":{"line":121,"column":9}},"line":119},"16":{"name":"(anonymous_16)","decl":{"start":{"line":134,"column":4},"end":{"line":134,"column":5}},"loc":{"start":{"line":134,"column":30},"end":{"line":148,"column":5}},"line":134},"17":{"name":"(anonymous_17)","decl":{"start":{"line":149,"column":4},"end":{"line":149,"column":5}},"loc":{"start":{"line":149,"column":27},"end":{"line":158,"column":5}},"line":149},"18":{"name":"(anonymous_18)","decl":{"start":{"line":159,"column":4},"end":{"line":159,"column":5}},"loc":{"start":{"line":159,"column":20},"end":{"line":189,"column":5}},"line":159},"19":{"name":"(anonymous_19)","decl":{"start":{"line":169,"column":16},"end":{"line":169,"column":17}},"loc":{"start":{"line":169,"column":26},"end":{"line":171,"column":13}},"line":169},"20":{"name":"(anonymous_20)","decl":{"start":{"line":174,"column":16},"end":{"line":174,"column":17}},"loc":{"start":{"line":174,"column":26},"end":{"line":176,"column":13}},"line":174},"21":{"name":"(anonymous_21)","decl":{"start":{"line":179,"column":16},"end":{"line":179,"column":17}},"loc":{"start":{"line":179,"column":26},"end":{"line":181,"column":13}},"line":179},"22":{"name":"(anonymous_22)","decl":{"start":{"line":184,"column":16},"end":{"line":184,"column":17}},"loc":{"start":{"line":184,"column":26},"end":{"line":186,"column":13}},"line":184},"23":{"name":"(anonymous_23)","decl":{"start":{"line":192,"column":4},"end":{"line":192,"column":5}},"loc":{"start":{"line":192,"column":30},"end":{"line":199,"column":5}},"line":192},"24":{"name":"(anonymous_24)","decl":{"start":{"line":200,"column":4},"end":{"line":200,"column":5}},"loc":{"start":{"line":200,"column":20},"end":{"line":204,"column":5}},"line":200},"25":{"name":"(anonymous_25)","decl":{"start":{"line":202,"column":20},"end":{"line":202,"column":21}},"loc":{"start":{"line":202,"column":27},"end":{"line":202,"column":39}},"line":202},"26":{"name":"(anonymous_26)","decl":{"start":{"line":202,"column":27},"end":{"line":202,"column":28}},"loc":{"start":{"line":202,"column":34},"end":{"line":202,"column":39}},"line":202}},"branchMap":{"0":{"loc":{"start":{"line":17,"column":8},"end":{"line":24,"column":9}},"type":"if","locations":[{"start":{"line":17,"column":8},"end":{"line":24,"column":9}},{"start":{"line":17,"column":8},"end":{"line":24,"column":9}}],"line":17},"1":{"loc":{"start":{"line":21,"column":12},"end":{"line":23,"column":13}},"type":"if","locations":[{"start":{"line":21,"column":12},"end":{"line":23,"column":13}},{"start":{"line":21,"column":12},"end":{"line":23,"column":13}}],"line":21},"2":{"loc":{"start":{"line":27,"column":8},"end":{"line":32,"column":9}},"type":"if","locations":[{"start":{"line":27,"column":8},"end":{"line":32,"column":9}},{"start":{"line":27,"column":8},"end":{"line":32,"column":9}}],"line":27},"3":{"loc":{"start":{"line":39,"column":4},"end":{"line":41,"column":5}},"type":"if","locations":[{"start":{"line":39,"column":4},"end":{"line":41,"column":5}},{"start":{"line":39,"column":4},"end":{"line":41,"column":5}}],"line":39},"4":{"loc":{"start":{"line":43,"column":4},"end":{"line":57,"column":5}},"type":"if","locations":[{"start":{"line":43,"column":4},"end":{"line":57,"column":5}},{"start":{"line":43,"column":4},"end":{"line":57,"column":5}}],"line":43},"5":{"loc":{"start":{"line":46,"column":9},"end":{"line":57,"column":5}},"type":"if","locations":[{"start":{"line":46,"column":9},"end":{"line":57,"column":5}},{"start":{"line":46,"column":9},"end":{"line":57,"column":5}}],"line":46},"6":{"loc":{"start":{"line":49,"column":9},"end":{"line":57,"column":5}},"type":"if","locations":[{"start":{"line":49,"column":9},"end":{"line":57,"column":5}},{"start":{"line":49,"column":9},"end":{"line":57,"column":5}}],"line":49},"7":{"loc":{"start":{"line":52,"column":9},"end":{"line":57,"column":5}},"type":"if","locations":[{"start":{"line":52,"column":9},"end":{"line":57,"column":5}},{"start":{"line":52,"column":9},"end":{"line":57,"column":5}}],"line":52},"8":{"loc":{"start":{"line":61,"column":8},"end":{"line":63,"column":9}},"type":"if","locations":[{"start":{"line":61,"column":8},"end":{"line":63,"column":9}},{"start":{"line":61,"column":8},"end":{"line":63,"column":9}}],"line":61},"9":{"loc":{"start":{"line":61,"column":14},"end":{"line":61,"column":39}},"type":"binary-expr","locations":[{"start":{"line":61,"column":14},"end":{"line":61,"column":25}},{"start":{"line":61,"column":29},"end":{"line":61,"column":39}}],"line":61},"10":{"loc":{"start":{"line":69,"column":8},"end":{"line":71,"column":9}},"type":"if","locations":[{"start":{"line":69,"column":8},"end":{"line":71,"column":9}},{"start":{"line":69,"column":8},"end":{"line":71,"column":9}}],"line":69},"11":{"loc":{"start":{"line":84,"column":8},"end":{"line":89,"column":9}},"type":"if","locations":[{"start":{"line":84,"column":8},"end":{"line":89,"column":9}},{"start":{"line":84,"column":8},"end":{"line":89,"column":9}}],"line":84},"12":{"loc":{"start":{"line":85,"column":46},"end":{"line":85,"column":60}},"type":"binary-expr","locations":[{"start":{"line":85,"column":46},"end":{"line":85,"column":51}},{"start":{"line":85,"column":55},"end":{"line":85,"column":60}}],"line":85},"13":{"loc":{"start":{"line":88,"column":46},"end":{"line":88,"column":60}},"type":"binary-expr","locations":[{"start":{"line":88,"column":46},"end":{"line":88,"column":51}},{"start":{"line":88,"column":55},"end":{"line":88,"column":60}}],"line":88},"14":{"loc":{"start":{"line":95,"column":8},"end":{"line":97,"column":9}},"type":"if","locations":[{"start":{"line":95,"column":8},"end":{"line":97,"column":9}},{"start":{"line":95,"column":8},"end":{"line":97,"column":9}}],"line":95},"15":{"loc":{"start":{"line":95,"column":14},"end":{"line":95,"column":52}},"type":"binary-expr","locations":[{"start":{"line":95,"column":14},"end":{"line":95,"column":24}},{"start":{"line":95,"column":28},"end":{"line":95,"column":38}},{"start":{"line":95,"column":42},"end":{"line":95,"column":52}}],"line":95},"16":{"loc":{"start":{"line":101,"column":8},"end":{"line":103,"column":9}},"type":"if","locations":[{"start":{"line":101,"column":8},"end":{"line":103,"column":9}},{"start":{"line":101,"column":8},"end":{"line":103,"column":9}}],"line":101},"17":{"loc":{"start":{"line":122,"column":8},"end":{"line":130,"column":9}},"type":"if","locations":[{"start":{"line":122,"column":8},"end":{"line":130,"column":9}},{"start":{"line":122,"column":8},"end":{"line":130,"column":9}}],"line":122},"18":{"loc":{"start":{"line":125,"column":13},"end":{"line":130,"column":9}},"type":"if","locations":[{"start":{"line":125,"column":13},"end":{"line":130,"column":9}},{"start":{"line":125,"column":13},"end":{"line":130,"column":9}}],"line":125},"19":{"loc":{"start":{"line":135,"column":8},"end":{"line":137,"column":9}},"type":"if","locations":[{"start":{"line":135,"column":8},"end":{"line":137,"column":9}},{"start":{"line":135,"column":8},"end":{"line":137,"column":9}}],"line":135},"20":{"loc":{"start":{"line":141,"column":8},"end":{"line":143,"column":9}},"type":"if","locations":[{"start":{"line":141,"column":8},"end":{"line":143,"column":9}},{"start":{"line":141,"column":8},"end":{"line":143,"column":9}}],"line":141},"21":{"loc":{"start":{"line":151,"column":8},"end":{"line":153,"column":9}},"type":"if","locations":[{"start":{"line":151,"column":8},"end":{"line":153,"column":9}},{"start":{"line":151,"column":8},"end":{"line":153,"column":9}}],"line":151},"22":{"loc":{"start":{"line":154,"column":8},"end":{"line":156,"column":9}},"type":"if","locations":[{"start":{"line":154,"column":8},"end":{"line":156,"column":9}},{"start":{"line":154,"column":8},"end":{"line":156,"column":9}}],"line":154},"23":{"loc":{"start":{"line":157,"column":17},"end":{"line":157,"column":61}},"type":"binary-expr","locations":[{"start":{"line":157,"column":17},"end":{"line":157,"column":39}},{"start":{"line":157,"column":43},"end":{"line":157,"column":61}}],"line":157},"24":{"loc":{"start":{"line":163,"column":8},"end":{"line":165,"column":9}},"type":"if","locations":[{"start":{"line":163,"column":8},"end":{"line":165,"column":9}},{"start":{"line":163,"column":8},"end":{"line":165,"column":9}}],"line":163},"25":{"loc":{"start":{"line":167,"column":8},"end":{"line":187,"column":9}},"type":"if","locations":[{"start":{"line":167,"column":8},"end":{"line":187,"column":9}},{"start":{"line":167,"column":8},"end":{"line":187,"column":9}}],"line":167},"26":{"loc":{"start":{"line":167,"column":12},"end":{"line":167,"column":62}},"type":"binary-expr","locations":[{"start":{"line":167,"column":12},"end":{"line":167,"column":36}},{"start":{"line":167,"column":40},"end":{"line":167,"column":62}}],"line":167},"27":{"loc":{"start":{"line":170,"column":24},"end":{"line":170,"column":75}},"type":"binary-expr","locations":[{"start":{"line":170,"column":24},"end":{"line":170,"column":40}},{"start":{"line":170,"column":44},"end":{"line":170,"column":75}}],"line":170},"28":{"loc":{"start":{"line":173,"column":13},"end":{"line":187,"column":9}},"type":"if","locations":[{"start":{"line":173,"column":13},"end":{"line":187,"column":9}},{"start":{"line":173,"column":13},"end":{"line":187,"column":9}}],"line":173},"29":{"loc":{"start":{"line":178,"column":13},"end":{"line":187,"column":9}},"type":"if","locations":[{"start":{"line":178,"column":13},"end":{"line":187,"column":9}},{"start":{"line":178,"column":13},"end":{"line":187,"column":9}}],"line":178},"30":{"loc":{"start":{"line":193,"column":8},"end":{"line":195,"column":9}},"type":"if","locations":[{"start":{"line":193,"column":8},"end":{"line":195,"column":9}},{"start":{"line":193,"column":8},"end":{"line":195,"column":9}}],"line":193}},"s":{"0":1,"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":1,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0]},"inputSourceMap":{"version":3,"file":"/Users/yexuanjiang/project_team129/src/controller/queryEngine/Body.ts","sources":["/Users/yexuanjiang/project_team129/src/controller/queryEngine/Body.ts"],"names":[],"mappings":"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","sourcesContent":["import {InsightError} from \"../IInsightFacade\";\nimport {MKey, SKey} from \"./Key\";\nimport {Query} from \"./Query\";\n\ntype FilterPredicate = (item: any) => boolean;\n\nexport class Body{\n\tpublic filter?: Filter;\n\tpublic query: Query;\n\n\tconstructor(body: any, q: Query) {\n\t\tthis.query = q;\n\t\tlet ks;\n\t\ttry {\n\t\t\tks = Object.keys(body);\n\t\t} catch (e) {\n\t\t\tthrow new InsightError(\"body cannot be null or undefined\");\n\t\t}\n\t\tconst len = ks.length;\n\t\tif (len === 1 ) {\n\t\t\tthis.filter = makeFilter(body, q);\n\t\t} else {\n\t\t\tif (len !== 0) {\n\t\t\t\tthrow new InsightError(\"Invalid Body\");\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic perform(data: any[]): any[] {\n\t\tif (!(this.filter === undefined)) {\n\t\t\treturn data.filter(this.filter.filterPredicate);\n\t\t} else {\n\t\t\treturn data;\n\t\t}\n\t}\n}\n\nfunction makeFilter(filter: any, q: Query): Filter {\n\tlet ks = Object.keys(filter);\n\tlet len = ks.length;\n\tif (len !== 1) {\n\t\tthrow new InsightError(\"the length of a filter is not 1\");\n\t}\n\tlet c = ks[0];\n\tif (/(AND)|(OR)/.test(c)) {\n\t\treturn new LogicComparison(filter,c, q);\n\t} else if(/(LT)|(GT)|(EQ)/.test(c)) {\n\t\treturn new MComparison(filter, c, q);\n\t} else if(/(IS)/.test(c)) {\n\t\treturn new SComparison(filter, c, q);\n\t} else if(/(NOT)/.test(c)) {\n\t\treturn new Negation(filter, c, q);\n\t} else {\n\t\tthrow new InsightError();\n\t}\n}\n\ninterface Filter {\n\tfilterPredicate: FilterPredicate;\n\tcomparator: string;\n}\n\nclass LogicComparison implements Filter{\n\tpublic filterPredicate: (item: any) => boolean;\n\tpublic comparator: string;\n\tpublic loFilters: Filter[];\n\n\tconstructor(filter: any, c: string, q: Query) {\n\t\tif (!( c === \"AND\" || c === \"OR\") ){\n\t\t\tthrow new InsightError(\"invalid Logic Comparator\");\n\t\t}\n\t\tthis.comparator = c;\n\t\tthis.loFilters = LogicComparison.makeFilters(filter[c], q);\n\t\tthis.filterPredicate = this.makePredicate();\n\t}\n\n\tprivate static makeFilters(lof: any[], q: Query): Filter[] {\n\t\tif (lof.length < 1) {\n\t\t\tthrow new InsightError(\"Invalid list of filters in Logic Comparison\");\n\t\t}\n\t\tlet res: Filter[] = [];\n\t\tfor (const f of lof) {\n\t\t\tres.push(makeFilter(f, q));\n\t\t}\n\t\treturn res;\n\t}\n\n\tprivate makePredicate(): FilterPredicate {\n\t\tlet p: FilterPredicate;\n\t\tlet loP: FilterPredicate[];\n\t\tloP = this.loFilters.map(function (f: Filter): FilterPredicate {\n\t\t\treturn f.filterPredicate;\n\t\t});\n\t\t// https://stackoverflow.com/questions/54801835/type-safe-predicate-functions-in-typescript\n\t\tif (this.comparator === \"AND\") {\n\t\t\tp = loP.reduce((p1, p2) => (i: any) => p1(i) && p2(i));\n\t\t} else {\n\t\t\tp = loP.reduce((p1, p2) => (i: any) => p1(i) || p2(i));\n\t\t}\n\t\treturn p;\n\t}\n\n}\n\nclass MComparison implements Filter {\n\tpublic filterPredicate: (item: any) => boolean;\n\tpublic comparator: string;\n\tpublic field: string;\n\tpublic number: number;\n\n\tconstructor(filter: any, c: string, q: Query) {\n\t\tif (!( c === \"LT\" || c === \"GT\" || c === \"EQ\") ){\n\t\t\tthrow new InsightError(\"invalid M Comparator\");\n\t\t}\n\t\tthis.comparator = c;\n\t\tlet ks = Object.keys(filter[c]);\n\t\tlet len = ks.length;\n\t\tif (len !== 1) {\n\t\t\tthrow new InsightError(\"invalid M Comparison\");\n\t\t}\n\t\tlet mkey = new MKey(ks[0], q);\n\t\tthis.field  = mkey.field;\n\t\tthis.number = filter[c][ks[0]];\n\t\tthis.filterPredicate = this.makePredicate();\n\t}\n\n\tprivate makePredicate(): FilterPredicate {\n\t\tlet comparator = this.comparator;\n\t\tlet field = this.field;\n\t\tlet number = this.number;\n\n\t\tlet equal = (item: any) => {\n\t\t\treturn item[this.field] === number;\n\t\t};\n\n\t\tlet lessThan = (item: any) => {\n\t\t\treturn item[field] < number;\n\t\t};\n\n\t\tlet greaterThan = (item: any) => {\n\t\t\treturn item[field] > number;\n\t\t};\n\n\t\tif (comparator === \"LT\") {\n\t\t\treturn lessThan;\n\t\t} else if (comparator === \"GT\") {\n\t\t\treturn greaterThan;\n\t\t} else {\n\t\t\treturn equal;\n\t\t}\n\t}\n}\n\nclass SComparison implements Filter {\n\tpublic filterPredicate: (item: any) => boolean;\n\tpublic comparator: string;\n\tpublic field: string;\n\tpublic inputString: string;\n\n\tconstructor(filter: any , c: string, q: Query) {\n\t\tif (c !== \"IS\" ){\n\t\t\tthrow new InsightError(\"invalid  S Comparator\");\n\t\t}\n\t\tthis.comparator = c;\n\t\tlet ks = Object.keys(filter[c]);\n\t\tlet len = ks.length;\n\t\tif (len !== 1) {\n\t\t\tthrow new InsightError(\"invalid S Comparison\");\n\t\t}\n\t\tlet skey = new SKey(ks[0], q);\n\t\tthis.field = skey.field;\n\t\tthis.inputString = filter[c][ks[0]];\n\t\tthis.filterPredicate = this.makePredicate();\n\t}\n\n\tprivate static isValidInput(s: string): boolean {\n\t\tlet input = s;\n\t\tif (input.startsWith(\"*\")) {\n\t\t\tinput = input.slice(1);\n\t\t}\n\t\tif (input.endsWith(\"*\")) {\n\t\t\tinput = input.slice(0, input.length - 1);\n\t\t}\n\t\treturn ((!(input.includes(\"*\")) || input.length === 0));\n\t}\n\n\tprivate makePredicate(): FilterPredicate{\n\t\tlet comparator = this.comparator;\n\t\tlet field = this.field;\n\t\tlet inputStr = this.inputString;\n\n\t\tif (!SComparison.isValidInput(inputStr)) {\n\t\t\tthrow new InsightError(\"invalid input string \\\" \" + inputStr + \"\\\"\");\n\t\t}\n\n\t\tlet p: FilterPredicate;\n\t\tif (inputStr.startsWith(\"*\") && inputStr.endsWith(\"*\")) {\n\t\t\tconst inputBody = inputStr.slice(1, inputStr.length - 1);\n\t\t\tp = (item: any) => {\n\t\t\t\treturn (inputBody === \"\" || item[field].includes(inputBody));\n\t\t\t};\n\t\t} else if (inputStr.startsWith(\"*\")) {\n\t\t\tp = (item: any) => {\n\t\t\t\treturn (item[field].endsWith(inputStr.slice(1)));\n\t\t\t};\n\t\t} else if (inputStr.endsWith(\"*\")) {\n\t\t\tp = (item: any) => {\n\t\t\t\treturn (item[field].startsWith(inputStr.slice(0,inputStr.length - 1)));\n\t\t\t};\n\t\t} else {\n\t\t\tp = (item: any) => {\n\t\t\t\treturn (item[field] === inputStr);\n\t\t\t};\n\t\t}\n\t\treturn p;\n\t}\n\n}\n\nclass Negation implements Filter {\n\tpublic comparator: string;\n\tpublic filterPredicate: FilterPredicate;\n\tpublic filter: Filter;\n\n\tconstructor(filter: any , c: string, q: Query) {\n\t\tif (c !== \"NOT\" ){\n\t\t\tthrow new InsightError(\"invalid Negation\");\n\t\t}\n\t\tthis.comparator = \"NOT\";\n\t\tthis.filter = makeFilter(filter[\"NOT\"], q);\n\t\tthis.filterPredicate = this.makePredicate();\n\t}\n\n\tprivate makePredicate(): FilterPredicate {\n\t\tlet pToNegate: FilterPredicate = this.filter.filterPredicate;\n\t\t// https://stackoverflow.com/questions/54801835/type-safe-predicate-functions-in-typescript\n\t\tconst not = (p: FilterPredicate) => (i: any) => !p(i);\n\t\treturn not(pToNegate);\n\t}\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"502e2065ead5661b4f3e7ae9050ff7f5d16d7ebf","contentHash":"ed10e63c88f2c1b1fe45c48b93396bc975f8aafa5877d0b835e240c184ca0171"},"/Users/yexuanjiang/project_team129/src/controller/queryEngine/Key.ts":{"path":"/Users/yexuanjiang/project_team129/src/controller/queryEngine/Key.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":87}},"2":{"start":{"line":4,"column":25},"end":{"line":4,"column":53}},"3":{"start":{"line":7,"column":8},"end":{"line":15,"column":9}},"4":{"start":{"line":8,"column":12},"end":{"line":8,"column":35}},"5":{"start":{"line":10,"column":13},"end":{"line":15,"column":9}},"6":{"start":{"line":11,"column":12},"end":{"line":11,"column":41}},"7":{"start":{"line":14,"column":12},"end":{"line":14,"column":70}},"8":{"start":{"line":18,"column":0},"end":{"line":18,"column":24}},"9":{"start":{"line":19,"column":0},"end":{"line":19,"column":29}},"10":{"start":{"line":22,"column":8},"end":{"line":22,"column":16}},"11":{"start":{"line":23,"column":8},"end":{"line":23,"column":27}},"12":{"start":{"line":24,"column":8},"end":{"line":24,"column":27}},"13":{"start":{"line":25,"column":8},"end":{"line":25,"column":27}},"14":{"start":{"line":28,"column":8},"end":{"line":28,"column":26}},"15":{"start":{"line":29,"column":25},"end":{"line":29,"column":43}},"16":{"start":{"line":30,"column":22},"end":{"line":30,"column":37}},"17":{"start":{"line":31,"column":8},"end":{"line":31,"column":45}},"18":{"start":{"line":32,"column":8},"end":{"line":32,"column":32}},"19":{"start":{"line":33,"column":8},"end":{"line":38,"column":9}},"20":{"start":{"line":34,"column":12},"end":{"line":34,"column":38}},"21":{"start":{"line":37,"column":12},"end":{"line":37,"column":38}},"22":{"start":{"line":41,"column":8},"end":{"line":43,"column":9}},"23":{"start":{"line":42,"column":12},"end":{"line":42,"column":82}},"24":{"start":{"line":46,"column":8},"end":{"line":46,"column":31}},"25":{"start":{"line":49,"column":8},"end":{"line":49,"column":31}},"26":{"start":{"line":52,"column":8},"end":{"line":55,"column":9}},"27":{"start":{"line":54,"column":12},"end":{"line":54,"column":88}},"28":{"start":{"line":58,"column":8},"end":{"line":65,"column":9}},"29":{"start":{"line":59,"column":12},"end":{"line":59,"column":38}},"30":{"start":{"line":62,"column":12},"end":{"line":64,"column":13}},"31":{"start":{"line":63,"column":16},"end":{"line":63,"column":102}},"32":{"start":{"line":68,"column":8},"end":{"line":68,"column":76}},"33":{"start":{"line":71,"column":8},"end":{"line":71,"column":76}},"34":{"start":{"line":74,"column":0},"end":{"line":74,"column":18}},"35":{"start":{"line":75,"column":0},"end":{"line":75,"column":94}},"36":{"start":{"line":76,"column":0},"end":{"line":76,"column":61}},"37":{"start":{"line":77,"column":0},"end":{"line":77,"column":39}},"38":{"start":{"line":78,"column":0},"end":{"line":78,"column":56}},"39":{"start":{"line":81,"column":8},"end":{"line":81,"column":26}},"40":{"start":{"line":82,"column":25},"end":{"line":82,"column":43}},"41":{"start":{"line":83,"column":22},"end":{"line":83,"column":37}},"42":{"start":{"line":84,"column":8},"end":{"line":84,"column":41}},"43":{"start":{"line":85,"column":8},"end":{"line":85,"column":34}},"44":{"start":{"line":86,"column":8},"end":{"line":86,"column":34}},"45":{"start":{"line":89,"column":8},"end":{"line":91,"column":9}},"46":{"start":{"line":90,"column":12},"end":{"line":90,"column":92}},"47":{"start":{"line":94,"column":0},"end":{"line":94,"column":20}},"48":{"start":{"line":97,"column":8},"end":{"line":97,"column":26}},"49":{"start":{"line":98,"column":25},"end":{"line":98,"column":43}},"50":{"start":{"line":99,"column":22},"end":{"line":99,"column":37}},"51":{"start":{"line":100,"column":8},"end":{"line":100,"column":41}},"52":{"start":{"line":101,"column":8},"end":{"line":101,"column":34}},"53":{"start":{"line":102,"column":8},"end":{"line":102,"column":34}},"54":{"start":{"line":105,"column":8},"end":{"line":107,"column":9}},"55":{"start":{"line":106,"column":12},"end":{"line":106,"column":92}},"56":{"start":{"line":110,"column":0},"end":{"line":110,"column":20}},"57":{"start":{"line":113,"column":8},"end":{"line":113,"column":26}},"58":{"start":{"line":116,"column":0},"end":{"line":116,"column":28}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":6,"column":4},"end":{"line":6,"column":5}},"loc":{"start":{"line":6,"column":32},"end":{"line":16,"column":5}},"line":6},"1":{"name":"(anonymous_1)","decl":{"start":{"line":21,"column":4},"end":{"line":21,"column":5}},"loc":{"start":{"line":21,"column":34},"end":{"line":26,"column":5}},"line":21},"2":{"name":"(anonymous_2)","decl":{"start":{"line":27,"column":4},"end":{"line":27,"column":5}},"loc":{"start":{"line":27,"column":29},"end":{"line":39,"column":5}},"line":27},"3":{"name":"(anonymous_3)","decl":{"start":{"line":40,"column":4},"end":{"line":40,"column":5}},"loc":{"start":{"line":40,"column":25},"end":{"line":44,"column":5}},"line":40},"4":{"name":"(anonymous_4)","decl":{"start":{"line":45,"column":4},"end":{"line":45,"column":5}},"loc":{"start":{"line":45,"column":26},"end":{"line":47,"column":5}},"line":45},"5":{"name":"(anonymous_5)","decl":{"start":{"line":48,"column":4},"end":{"line":48,"column":5}},"loc":{"start":{"line":48,"column":23},"end":{"line":50,"column":5}},"line":48},"6":{"name":"(anonymous_6)","decl":{"start":{"line":51,"column":4},"end":{"line":51,"column":5}},"loc":{"start":{"line":51,"column":31},"end":{"line":56,"column":5}},"line":51},"7":{"name":"(anonymous_7)","decl":{"start":{"line":57,"column":4},"end":{"line":57,"column":5}},"loc":{"start":{"line":57,"column":44},"end":{"line":66,"column":5}},"line":57},"8":{"name":"(anonymous_8)","decl":{"start":{"line":67,"column":4},"end":{"line":67,"column":5}},"loc":{"start":{"line":67,"column":27},"end":{"line":69,"column":5}},"line":67},"9":{"name":"(anonymous_9)","decl":{"start":{"line":70,"column":4},"end":{"line":70,"column":5}},"loc":{"start":{"line":70,"column":27},"end":{"line":72,"column":5}},"line":70},"10":{"name":"(anonymous_10)","decl":{"start":{"line":80,"column":4},"end":{"line":80,"column":5}},"loc":{"start":{"line":80,"column":22},"end":{"line":87,"column":5}},"line":80},"11":{"name":"(anonymous_11)","decl":{"start":{"line":88,"column":4},"end":{"line":88,"column":5}},"loc":{"start":{"line":88,"column":28},"end":{"line":92,"column":5}},"line":88},"12":{"name":"(anonymous_12)","decl":{"start":{"line":96,"column":4},"end":{"line":96,"column":5}},"loc":{"start":{"line":96,"column":22},"end":{"line":103,"column":5}},"line":96},"13":{"name":"(anonymous_13)","decl":{"start":{"line":104,"column":4},"end":{"line":104,"column":5}},"loc":{"start":{"line":104,"column":28},"end":{"line":108,"column":5}},"line":104},"14":{"name":"(anonymous_14)","decl":{"start":{"line":112,"column":4},"end":{"line":112,"column":5}},"loc":{"start":{"line":112,"column":19},"end":{"line":114,"column":5}},"line":112}},"branchMap":{"0":{"loc":{"start":{"line":7,"column":8},"end":{"line":15,"column":9}},"type":"if","locations":[{"start":{"line":7,"column":8},"end":{"line":15,"column":9}},{"start":{"line":7,"column":8},"end":{"line":15,"column":9}}],"line":7},"1":{"loc":{"start":{"line":10,"column":13},"end":{"line":15,"column":9}},"type":"if","locations":[{"start":{"line":10,"column":13},"end":{"line":15,"column":9}},{"start":{"line":10,"column":13},"end":{"line":15,"column":9}}],"line":10},"2":{"loc":{"start":{"line":33,"column":8},"end":{"line":38,"column":9}},"type":"if","locations":[{"start":{"line":33,"column":8},"end":{"line":38,"column":9}},{"start":{"line":33,"column":8},"end":{"line":38,"column":9}}],"line":33},"3":{"loc":{"start":{"line":41,"column":8},"end":{"line":43,"column":9}},"type":"if","locations":[{"start":{"line":41,"column":8},"end":{"line":43,"column":9}},{"start":{"line":41,"column":8},"end":{"line":43,"column":9}}],"line":41},"4":{"loc":{"start":{"line":52,"column":8},"end":{"line":55,"column":9}},"type":"if","locations":[{"start":{"line":52,"column":8},"end":{"line":55,"column":9}},{"start":{"line":52,"column":8},"end":{"line":55,"column":9}}],"line":52},"5":{"loc":{"start":{"line":52,"column":14},"end":{"line":53,"column":73}},"type":"binary-expr","locations":[{"start":{"line":52,"column":14},"end":{"line":52,"column":40}},{"start":{"line":52,"column":44},"end":{"line":52,"column":70}},{"start":{"line":53,"column":12},"end":{"line":53,"column":40}},{"start":{"line":53,"column":44},"end":{"line":53,"column":73}}],"line":52},"6":{"loc":{"start":{"line":58,"column":8},"end":{"line":65,"column":9}},"type":"if","locations":[{"start":{"line":58,"column":8},"end":{"line":65,"column":9}},{"start":{"line":58,"column":8},"end":{"line":65,"column":9}}],"line":58},"7":{"loc":{"start":{"line":62,"column":12},"end":{"line":64,"column":13}},"type":"if","locations":[{"start":{"line":62,"column":12},"end":{"line":64,"column":13}},{"start":{"line":62,"column":12},"end":{"line":64,"column":13}}],"line":62},"8":{"loc":{"start":{"line":68,"column":16},"end":{"line":68,"column":74}},"type":"binary-expr","locations":[{"start":{"line":68,"column":16},"end":{"line":68,"column":44}},{"start":{"line":68,"column":48},"end":{"line":68,"column":74}}],"line":68},"9":{"loc":{"start":{"line":71,"column":16},"end":{"line":71,"column":74}},"type":"binary-expr","locations":[{"start":{"line":71,"column":16},"end":{"line":71,"column":44}},{"start":{"line":71,"column":48},"end":{"line":71,"column":74}}],"line":71},"10":{"loc":{"start":{"line":89,"column":8},"end":{"line":91,"column":9}},"type":"if","locations":[{"start":{"line":89,"column":8},"end":{"line":91,"column":9}},{"start":{"line":89,"column":8},"end":{"line":91,"column":9}}],"line":89},"11":{"loc":{"start":{"line":89,"column":14},"end":{"line":89,"column":64}},"type":"binary-expr","locations":[{"start":{"line":89,"column":14},"end":{"line":89,"column":38}},{"start":{"line":89,"column":42},"end":{"line":89,"column":64}}],"line":89},"12":{"loc":{"start":{"line":105,"column":8},"end":{"line":107,"column":9}},"type":"if","locations":[{"start":{"line":105,"column":8},"end":{"line":107,"column":9}},{"start":{"line":105,"column":8},"end":{"line":107,"column":9}}],"line":105},"13":{"loc":{"start":{"line":105,"column":14},"end":{"line":105,"column":64}},"type":"binary-expr","locations":[{"start":{"line":105,"column":14},"end":{"line":105,"column":38}},{"start":{"line":105,"column":42},"end":{"line":105,"column":64}}],"line":105}},"s":{"0":1,"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":1,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":1,"35":1,"36":1,"37":1,"38":1,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":1,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":1,"57":0,"58":1},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0,0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0]},"inputSourceMap":{"version":3,"file":"/Users/yexuanjiang/project_team129/src/controller/queryEngine/Key.ts","sources":["/Users/yexuanjiang/project_team129/src/controller/queryEngine/Key.ts"],"names":[],"mappings":"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","sourcesContent":["import {InsightError} from \"../IInsightFacade\";\nimport {Query} from \"./Query\";\n\nexport class AnyKey {\n\tprotected static validKey = /[^_]+_.*/;\n\tpublic static makeAnyKey(k: string, query: Query): ApplyKey|Key {\n\t\tif (!k.includes(\"_\")) {\n\t\t\treturn new ApplyKey(k);\n\t\t} else if (Key.validKey.test(k)) {\n\t\t\treturn Key.makeKey(k, query);\n\t\t} else {\n\t\t\tthrow  new InsightError(\"invalid ANYKEY\");\n\t\t}\n\t}\n\n}\n\nexport class Key extends AnyKey{\n\tprotected static roomSField = /(fullname)|(shortname)|(number)|(name)|(address)|(type)|(furniture)|(href)/\n\tprotected static courseSField = /(dept)|(id)|(instructor)|(title)|(uuid)/\n\tprotected static roomMField = /(lat)|(lon)|(seats)/\n\tprotected static courseMField = /(avg)|(pass)|(fail)|(audit)|(year)/\n\n\tpublic query: Query;\n\tpublic idString: string;\n\tpublic field: string;\n\n\tprotected constructor(id: string, field: string, query: Query) {\n\t\tsuper();\n\t\tthis.query = query;\n\t\tthis.field = field;\n\t\tthis.idString = id;\n\t}\n\n\tpublic static makeKey(k: string, query: Query): Key {\n\t\tKey.isValidKey(k);\n\t\tconst idString = Key.getIdString(k);\n\t\tconst field = Key.getField(k);\n\t\tKey.isValidIdString(idString, query);\n\t\tKey.isValidField(field);\n\t\tif (Key.isMField(field)) {\n\t\t\treturn new MKey(k, query);\n\t\t} else {\n\t\t\treturn new SKey(k, query);\n\t\t}\n\t}\n\n\tprotected static isValidKey(k: string) {\n\t\tif (!Key.validKey.test(k)) {\n\t\t\tthrow new InsightError(\"key '\" + k + \"' is invalid\");\n\t\t}\n\t}\n\n\tprotected static getIdString(k: string) {\n\t\treturn k.split(\"_\")[0];\n\t}\n\n\tprotected static getField(k: string) {\n\t\treturn k.split(\"_\")[1];\n\t}\n\n\tprotected static isValidField(field: string) {\n\t\tif (!(Key.roomMField.test(field) || Key.roomSField.test(field) ||\n\t\t\tKey.courseMField.test(field) || this.courseSField.test(field))) {\n\t\t\tthrow new InsightError(\"field '\" + field + \"' is invalid\");\n\t\t}\n\t}\n\n\tprotected static isValidIdString(idString: string, query: Query) {\n\t\tif (query.idString === \"\") {\n\t\t\tquery.idString = idString;\n\t\t} else {\n\t\t\tif (query.idString !== idString) {\n\t\t\t\tthrow new InsightError(\"cannot query more than one kind of dataset\");\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate static isMField(field: string) {\n\t\treturn (Key.courseMField.test(field) || Key.roomMField.test(field));\n\t}\n\n\tprivate static isSField(field: string) {\n\t\treturn (Key.courseSField.test(field) || Key.roomSField.test(field));\n\t}\n\n\t// private static courseField = /(dept)|(id)|(instructor)|(title)|(uuid)|(avg)|(pass)|(fail)|(audit)|(year)/;\n\t// private static roomField = new RegExp([\"(fullname)|(shortname)|(number)|(name)|(address)|(type)|(furniture)|(href)\",\n\t// \t\"|(lat) | (lon) | (seats)\"].join(\"\"))\n\t// private static setIdstring(key: string): string {\n\t// \tif (!Key.validKey.test(key)) {\n\t// \t\tthrow new InsightError(\"key '\" + key + \"' is invalid\");\n\t// \t}\n\t// \treturn key.split(\"_\")[0];\n\t// }\n\t// protected abstract setField(k: string): string;\n\t// private setDataInfo() {\n\t// \t// let field = this.field;\n\t// \t// let kind: InsightDatasetKind;\n\t// \t// if (Key.courseField.test(field)) {\n\t// \t// \tkind = InsightDatasetKind.Courses;\n\t// \t// } else if (Key.roomField.test(field)) {\n\t// \t// \tkind = InsightDatasetKind.Rooms;\n\t// \t// } else {\n\t// \t// \tthrow new InsightError(\"field '\" + field + \"' is invalid\");\n\t// \t// }\n\t//\n\t// \tif (this.query.idString === \"\") {\n\t// \t\t// Query.dataInfo.kind = kind;\n\t// \t\tthis.query.idString = this.idString;\n\t// \t} else {\n\t// \t\t// if (!((Query.dataInfo.kind === kind) && (Query.dataInfo.idString === this.idString))) {\n\t// \t\tif (this.query.idString !== this.idString) {\n\t// \t\t\tthrow new InsightError(\"cannot query more than one kind of dataset\");\n\t// \t\t}\n\t// \t}\n\t// }\n}\n\nexport class SKey extends Key{\n\tconstructor(k: string, q: Query) {\n\t\tKey.isValidKey(k);\n\t\tconst idString = Key.getIdString(k);\n\t\tconst field = Key.getField(k);\n\t\tKey.isValidIdString(idString, q);\n\t\tSKey.isValidSField(field);\n\t\tsuper(idString, field, q);\n\t}\n\n\tprivate static isValidSField(f: string) {\n\t\tif (!(Key.courseSField.test(f) || Key.roomSField.test(f))) {\n\t\t\tthrow new InsightError(\"field '\" + f + \"' is invalid S Field\");\n\t\t}\n\t}\n}\n\nexport class MKey extends Key {\n\tconstructor(k: string, q: Query) {\n\t\tKey.isValidKey(k);\n\t\tconst idString = Key.getIdString(k);\n\t\tconst field = Key.getField(k);\n\t\tKey.isValidIdString(idString, q);\n\t\tMKey.isValidMField(field);\n\t\tsuper(idString, field, q);\n\t}\n\n\tprivate static isValidMField(f: string) {\n\t\tif (!(Key.courseMField.test(f) || Key.roomMField.test(f))) {\n\t\t\tthrow new InsightError(\"field '\" + f + \"' is invalid M Field\");\n\t\t}\n\t}\n}\n\nexport class ApplyKey {\n\tpublic applyKey: string;\n\n\tpublic constructor(k: string) {\n\t\tthis.applyKey = k;\n\t}\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"2a10b745621add34b26e8908d4aa63fe7b141715","contentHash":"1c1e7bbe96a94d51b815c90c0535a58cd52c5816faa96c1fe2e0a0d02c83dd0a"},"/Users/yexuanjiang/project_team129/src/controller/queryEngine/Options.ts":{"path":"/Users/yexuanjiang/project_team129/src/controller/queryEngine/Options.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":25}},"2":{"start":{"line":4,"column":25},"end":{"line":4,"column":53}},"3":{"start":{"line":5,"column":14},"end":{"line":5,"column":30}},"4":{"start":{"line":9,"column":8},"end":{"line":14,"column":9}},"5":{"start":{"line":10,"column":12},"end":{"line":10,"column":41}},"6":{"start":{"line":13,"column":12},"end":{"line":13,"column":84}},"7":{"start":{"line":15,"column":20},"end":{"line":15,"column":29}},"8":{"start":{"line":16,"column":8},"end":{"line":18,"column":9}},"9":{"start":{"line":17,"column":12},"end":{"line":17,"column":103}},"10":{"start":{"line":19,"column":8},"end":{"line":24,"column":9}},"11":{"start":{"line":20,"column":12},"end":{"line":20,"column":105}},"12":{"start":{"line":22,"column":13},"end":{"line":24,"column":9}},"13":{"start":{"line":23,"column":12},"end":{"line":23,"column":103}},"14":{"start":{"line":25,"column":8},"end":{"line":25,"column":65}},"15":{"start":{"line":26,"column":8},"end":{"line":28,"column":9}},"16":{"start":{"line":27,"column":12},"end":{"line":27,"column":73}},"17":{"start":{"line":31,"column":29},"end":{"line":31,"column":63}},"18":{"start":{"line":32,"column":8},"end":{"line":34,"column":9}},"19":{"start":{"line":33,"column":31},"end":{"line":33,"column":62}},"20":{"start":{"line":35,"column":8},"end":{"line":35,"column":28}},"21":{"start":{"line":38,"column":0},"end":{"line":38,"column":26}},"22":{"start":{"line":41,"column":8},"end":{"line":41,"column":35}},"23":{"start":{"line":43,"column":8},"end":{"line":52,"column":9}},"24":{"start":{"line":44,"column":12},"end":{"line":44,"column":33}},"25":{"start":{"line":45,"column":24},"end":{"line":45,"column":38}},"26":{"start":{"line":46,"column":12},"end":{"line":48,"column":13}},"27":{"start":{"line":47,"column":16},"end":{"line":47,"column":110}},"28":{"start":{"line":51,"column":12},"end":{"line":51,"column":82}},"29":{"start":{"line":53,"column":8},"end":{"line":60,"column":11}},"30":{"start":{"line":54,"column":12},"end":{"line":59,"column":13}},"31":{"start":{"line":55,"column":16},"end":{"line":55,"column":79}},"32":{"start":{"line":58,"column":16},"end":{"line":58,"column":89}},"33":{"start":{"line":61,"column":8},"end":{"line":61,"column":60}},"34":{"start":{"line":62,"column":8},"end":{"line":62,"column":59}},"35":{"start":{"line":63,"column":8},"end":{"line":63,"column":27}},"36":{"start":{"line":66,"column":27},"end":{"line":66,"column":45}},"37":{"start":{"line":67,"column":8},"end":{"line":72,"column":11}},"38":{"start":{"line":68,"column":28},"end":{"line":70,"column":14}},"39":{"start":{"line":69,"column":16},"end":{"line":69,"column":52}},"40":{"start":{"line":71,"column":12},"end":{"line":71,"column":47}},"41":{"start":{"line":75,"column":8},"end":{"line":82,"column":11}},"42":{"start":{"line":76,"column":12},"end":{"line":81,"column":13}},"43":{"start":{"line":77,"column":16},"end":{"line":77,"column":39}},"44":{"start":{"line":80,"column":16},"end":{"line":80,"column":42}},"45":{"start":{"line":87,"column":8},"end":{"line":87,"column":33}},"46":{"start":{"line":90,"column":8},"end":{"line":95,"column":9}},"47":{"start":{"line":91,"column":12},"end":{"line":91,"column":54}},"48":{"start":{"line":93,"column":13},"end":{"line":95,"column":9}},"49":{"start":{"line":94,"column":12},"end":{"line":94,"column":56}},"50":{"start":{"line":100,"column":8},"end":{"line":100,"column":33}},"51":{"start":{"line":101,"column":19},"end":{"line":101,"column":39}},"52":{"start":{"line":102,"column":20},"end":{"line":102,"column":29}},"53":{"start":{"line":103,"column":8},"end":{"line":105,"column":9}},"54":{"start":{"line":104,"column":12},"end":{"line":104,"column":99}},"55":{"start":{"line":106,"column":8},"end":{"line":108,"column":9}},"56":{"start":{"line":107,"column":12},"end":{"line":107,"column":108}},"57":{"start":{"line":109,"column":8},"end":{"line":111,"column":9}},"58":{"start":{"line":110,"column":12},"end":{"line":110,"column":109}},"59":{"start":{"line":112,"column":20},"end":{"line":112,"column":34}},"60":{"start":{"line":113,"column":8},"end":{"line":118,"column":9}},"61":{"start":{"line":114,"column":12},"end":{"line":114,"column":33}},"62":{"start":{"line":117,"column":12},"end":{"line":117,"column":106}},"63":{"start":{"line":120,"column":8},"end":{"line":128,"column":9}},"64":{"start":{"line":121,"column":12},"end":{"line":121,"column":34}},"65":{"start":{"line":122,"column":12},"end":{"line":124,"column":13}},"66":{"start":{"line":123,"column":16},"end":{"line":123,"column":110}},"67":{"start":{"line":127,"column":12},"end":{"line":127,"column":84}},"68":{"start":{"line":129,"column":8},"end":{"line":141,"column":11}},"69":{"start":{"line":130,"column":12},"end":{"line":140,"column":13}},"70":{"start":{"line":131,"column":16},"end":{"line":136,"column":17}},"71":{"start":{"line":132,"column":20},"end":{"line":132,"column":100}},"72":{"start":{"line":135,"column":20},"end":{"line":135,"column":61}},"73":{"start":{"line":139,"column":16},"end":{"line":139,"column":89}},"74":{"start":{"line":144,"column":23},"end":{"line":144,"column":32}},"75":{"start":{"line":146,"column":8},"end":{"line":146,"column":53}},"76":{"start":{"line":147,"column":21},"end":{"line":147,"column":47}},"77":{"start":{"line":148,"column":8},"end":{"line":150,"column":9}},"78":{"start":{"line":149,"column":12},"end":{"line":149,"column":38}},"79":{"start":{"line":151,"column":8},"end":{"line":151,"column":22}},"80":{"start":{"line":153,"column":20},"end":{"line":153,"column":21}},"81":{"start":{"line":154,"column":12},"end":{"line":167,"column":13}},"82":{"start":{"line":155,"column":30},"end":{"line":155,"column":49}},"83":{"start":{"line":156,"column":27},"end":{"line":156,"column":38}},"84":{"start":{"line":157,"column":27},"end":{"line":157,"column":38}},"85":{"start":{"line":158,"column":16},"end":{"line":160,"column":17}},"86":{"start":{"line":159,"column":20},"end":{"line":159,"column":30}},"87":{"start":{"line":161,"column":16},"end":{"line":163,"column":17}},"88":{"start":{"line":162,"column":20},"end":{"line":162,"column":29}},"89":{"start":{"line":164,"column":16},"end":{"line":166,"column":17}},"90":{"start":{"line":165,"column":20},"end":{"line":165,"column":24}},"91":{"start":{"line":168,"column":12},"end":{"line":168,"column":21}},"92":{"start":{"line":171,"column":12},"end":{"line":179,"column":13}},"93":{"start":{"line":172,"column":16},"end":{"line":172,"column":33}},"94":{"start":{"line":174,"column":17},"end":{"line":179,"column":13}},"95":{"start":{"line":175,"column":16},"end":{"line":175,"column":36}},"96":{"start":{"line":178,"column":16},"end":{"line":178,"column":46}},"97":{"start":{"line":183,"column":0},"end":{"line":183,"column":40}},"98":{"start":{"line":186,"column":8},"end":{"line":186,"column":33}},"99":{"start":{"line":187,"column":8},"end":{"line":197,"column":9}},"100":{"start":{"line":188,"column":12},"end":{"line":193,"column":13}},"101":{"start":{"line":189,"column":16},"end":{"line":189,"column":63}},"102":{"start":{"line":192,"column":16},"end":{"line":192,"column":96}},"103":{"start":{"line":196,"column":12},"end":{"line":196,"column":84}},"104":{"start":{"line":200,"column":21},"end":{"line":200,"column":33}},"105":{"start":{"line":202,"column":8},"end":{"line":210,"column":9}},"106":{"start":{"line":203,"column":12},"end":{"line":203,"column":41}},"107":{"start":{"line":205,"column":13},"end":{"line":210,"column":9}},"108":{"start":{"line":206,"column":12},"end":{"line":206,"column":44}},"109":{"start":{"line":209,"column":12},"end":{"line":209,"column":42}},"110":{"start":{"line":211,"column":8},"end":{"line":211,"column":42}},"111":{"start":{"line":213,"column":23},"end":{"line":213,"column":40}},"112":{"start":{"line":214,"column":23},"end":{"line":214,"column":40}},"113":{"start":{"line":215,"column":12},"end":{"line":217,"column":13}},"114":{"start":{"line":216,"column":16},"end":{"line":216,"column":26}},"115":{"start":{"line":218,"column":12},"end":{"line":220,"column":13}},"116":{"start":{"line":219,"column":16},"end":{"line":219,"column":25}},"117":{"start":{"line":221,"column":12},"end":{"line":221,"column":21}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":7,"column":4},"end":{"line":7,"column":5}},"loc":{"start":{"line":7,"column":35},"end":{"line":29,"column":5}},"line":7},"1":{"name":"(anonymous_1)","decl":{"start":{"line":30,"column":4},"end":{"line":30,"column":5}},"loc":{"start":{"line":30,"column":26},"end":{"line":36,"column":5}},"line":30},"2":{"name":"(anonymous_2)","decl":{"start":{"line":40,"column":4},"end":{"line":40,"column":5}},"loc":{"start":{"line":40,"column":35},"end":{"line":64,"column":5}},"line":40},"3":{"name":"(anonymous_3)","decl":{"start":{"line":53,"column":20},"end":{"line":53,"column":21}},"loc":{"start":{"line":53,"column":30},"end":{"line":60,"column":9}},"line":53},"4":{"name":"(anonymous_4)","decl":{"start":{"line":65,"column":4},"end":{"line":65,"column":5}},"loc":{"start":{"line":65,"column":26},"end":{"line":73,"column":5}},"line":65},"5":{"name":"(anonymous_5)","decl":{"start":{"line":67,"column":32},"end":{"line":67,"column":33}},"loc":{"start":{"line":67,"column":42},"end":{"line":72,"column":9}},"line":67},"6":{"name":"(anonymous_6)","decl":{"start":{"line":68,"column":56},"end":{"line":68,"column":57}},"loc":{"start":{"line":68,"column":78},"end":{"line":70,"column":13}},"line":68},"7":{"name":"(anonymous_7)","decl":{"start":{"line":74,"column":4},"end":{"line":74,"column":5}},"loc":{"start":{"line":74,"column":18},"end":{"line":83,"column":5}},"line":74},"8":{"name":"(anonymous_8)","decl":{"start":{"line":75,"column":32},"end":{"line":75,"column":33}},"loc":{"start":{"line":75,"column":47},"end":{"line":82,"column":9}},"line":75},"9":{"name":"(anonymous_9)","decl":{"start":{"line":86,"column":4},"end":{"line":86,"column":5}},"loc":{"start":{"line":86,"column":35},"end":{"line":88,"column":5}},"line":86},"10":{"name":"(anonymous_10)","decl":{"start":{"line":89,"column":4},"end":{"line":89,"column":5}},"loc":{"start":{"line":89,"column":39},"end":{"line":96,"column":5}},"line":89},"11":{"name":"(anonymous_11)","decl":{"start":{"line":99,"column":4},"end":{"line":99,"column":5}},"loc":{"start":{"line":99,"column":35},"end":{"line":142,"column":5}},"line":99},"12":{"name":"(anonymous_12)","decl":{"start":{"line":129,"column":28},"end":{"line":129,"column":29}},"loc":{"start":{"line":129,"column":43},"end":{"line":141,"column":9}},"line":129},"13":{"name":"(anonymous_13)","decl":{"start":{"line":143,"column":4},"end":{"line":143,"column":5}},"loc":{"start":{"line":143,"column":26},"end":{"line":181,"column":5}},"line":143},"14":{"name":"compare","decl":{"start":{"line":152,"column":17},"end":{"line":152,"column":24}},"loc":{"start":{"line":152,"column":33},"end":{"line":169,"column":9}},"line":152},"15":{"name":"getSortKeys","decl":{"start":{"line":170,"column":17},"end":{"line":170,"column":28}},"loc":{"start":{"line":170,"column":34},"end":{"line":180,"column":9}},"line":170},"16":{"name":"(anonymous_16)","decl":{"start":{"line":185,"column":4},"end":{"line":185,"column":5}},"loc":{"start":{"line":185,"column":35},"end":{"line":198,"column":5}},"line":185},"17":{"name":"(anonymous_17)","decl":{"start":{"line":199,"column":4},"end":{"line":199,"column":5}},"loc":{"start":{"line":199,"column":26},"end":{"line":223,"column":5}},"line":199},"18":{"name":"compare","decl":{"start":{"line":212,"column":17},"end":{"line":212,"column":24}},"loc":{"start":{"line":212,"column":33},"end":{"line":222,"column":9}},"line":212}},"branchMap":{"0":{"loc":{"start":{"line":16,"column":8},"end":{"line":18,"column":9}},"type":"if","locations":[{"start":{"line":16,"column":8},"end":{"line":18,"column":9}},{"start":{"line":16,"column":8},"end":{"line":18,"column":9}}],"line":16},"1":{"loc":{"start":{"line":16,"column":12},"end":{"line":16,"column":30}},"type":"binary-expr","locations":[{"start":{"line":16,"column":12},"end":{"line":16,"column":19}},{"start":{"line":16,"column":23},"end":{"line":16,"column":30}}],"line":16},"2":{"loc":{"start":{"line":19,"column":8},"end":{"line":24,"column":9}},"type":"if","locations":[{"start":{"line":19,"column":8},"end":{"line":24,"column":9}},{"start":{"line":19,"column":8},"end":{"line":24,"column":9}}],"line":19},"3":{"loc":{"start":{"line":22,"column":13},"end":{"line":24,"column":9}},"type":"if","locations":[{"start":{"line":22,"column":13},"end":{"line":24,"column":9}},{"start":{"line":22,"column":13},"end":{"line":24,"column":9}}],"line":22},"4":{"loc":{"start":{"line":22,"column":17},"end":{"line":22,"column":47}},"type":"binary-expr","locations":[{"start":{"line":22,"column":17},"end":{"line":22,"column":26}},{"start":{"line":22,"column":30},"end":{"line":22,"column":47}}],"line":22},"5":{"loc":{"start":{"line":26,"column":8},"end":{"line":28,"column":9}},"type":"if","locations":[{"start":{"line":26,"column":8},"end":{"line":28,"column":9}},{"start":{"line":26,"column":8},"end":{"line":28,"column":9}}],"line":26},"6":{"loc":{"start":{"line":32,"column":8},"end":{"line":34,"column":9}},"type":"if","locations":[{"start":{"line":32,"column":8},"end":{"line":34,"column":9}},{"start":{"line":32,"column":8},"end":{"line":34,"column":9}}],"line":32},"7":{"loc":{"start":{"line":43,"column":8},"end":{"line":52,"column":9}},"type":"if","locations":[{"start":{"line":43,"column":8},"end":{"line":52,"column":9}},{"start":{"line":43,"column":8},"end":{"line":52,"column":9}}],"line":43},"8":{"loc":{"start":{"line":46,"column":12},"end":{"line":48,"column":13}},"type":"if","locations":[{"start":{"line":46,"column":12},"end":{"line":48,"column":13}},{"start":{"line":46,"column":12},"end":{"line":48,"column":13}}],"line":46},"9":{"loc":{"start":{"line":54,"column":12},"end":{"line":59,"column":13}},"type":"if","locations":[{"start":{"line":54,"column":12},"end":{"line":59,"column":13}},{"start":{"line":54,"column":12},"end":{"line":59,"column":13}}],"line":54},"10":{"loc":{"start":{"line":76,"column":12},"end":{"line":81,"column":13}},"type":"if","locations":[{"start":{"line":76,"column":12},"end":{"line":81,"column":13}},{"start":{"line":76,"column":12},"end":{"line":81,"column":13}}],"line":76},"11":{"loc":{"start":{"line":76,"column":16},"end":{"line":76,"column":82}},"type":"binary-expr","locations":[{"start":{"line":76,"column":16},"end":{"line":76,"column":47}},{"start":{"line":76,"column":51},"end":{"line":76,"column":82}}],"line":76},"12":{"loc":{"start":{"line":90,"column":8},"end":{"line":95,"column":9}},"type":"if","locations":[{"start":{"line":90,"column":8},"end":{"line":95,"column":9}},{"start":{"line":90,"column":8},"end":{"line":95,"column":9}}],"line":90},"13":{"loc":{"start":{"line":93,"column":13},"end":{"line":95,"column":9}},"type":"if","locations":[{"start":{"line":93,"column":13},"end":{"line":95,"column":9}},{"start":{"line":93,"column":13},"end":{"line":95,"column":9}}],"line":93},"14":{"loc":{"start":{"line":103,"column":8},"end":{"line":105,"column":9}},"type":"if","locations":[{"start":{"line":103,"column":8},"end":{"line":105,"column":9}},{"start":{"line":103,"column":8},"end":{"line":105,"column":9}}],"line":103},"15":{"loc":{"start":{"line":106,"column":8},"end":{"line":108,"column":9}},"type":"if","locations":[{"start":{"line":106,"column":8},"end":{"line":108,"column":9}},{"start":{"line":106,"column":8},"end":{"line":108,"column":9}}],"line":106},"16":{"loc":{"start":{"line":109,"column":8},"end":{"line":111,"column":9}},"type":"if","locations":[{"start":{"line":109,"column":8},"end":{"line":111,"column":9}},{"start":{"line":109,"column":8},"end":{"line":111,"column":9}}],"line":109},"17":{"loc":{"start":{"line":113,"column":8},"end":{"line":118,"column":9}},"type":"if","locations":[{"start":{"line":113,"column":8},"end":{"line":118,"column":9}},{"start":{"line":113,"column":8},"end":{"line":118,"column":9}}],"line":113},"18":{"loc":{"start":{"line":120,"column":8},"end":{"line":128,"column":9}},"type":"if","locations":[{"start":{"line":120,"column":8},"end":{"line":128,"column":9}},{"start":{"line":120,"column":8},"end":{"line":128,"column":9}}],"line":120},"19":{"loc":{"start":{"line":122,"column":12},"end":{"line":124,"column":13}},"type":"if","locations":[{"start":{"line":122,"column":12},"end":{"line":124,"column":13}},{"start":{"line":122,"column":12},"end":{"line":124,"column":13}}],"line":122},"20":{"loc":{"start":{"line":130,"column":12},"end":{"line":140,"column":13}},"type":"if","locations":[{"start":{"line":130,"column":12},"end":{"line":140,"column":13}},{"start":{"line":130,"column":12},"end":{"line":140,"column":13}}],"line":130},"21":{"loc":{"start":{"line":131,"column":16},"end":{"line":136,"column":17}},"type":"if","locations":[{"start":{"line":131,"column":16},"end":{"line":136,"column":17}},{"start":{"line":131,"column":16},"end":{"line":136,"column":17}}],"line":131},"22":{"loc":{"start":{"line":148,"column":8},"end":{"line":150,"column":9}},"type":"if","locations":[{"start":{"line":148,"column":8},"end":{"line":150,"column":9}},{"start":{"line":148,"column":8},"end":{"line":150,"column":9}}],"line":148},"23":{"loc":{"start":{"line":158,"column":16},"end":{"line":160,"column":17}},"type":"if","locations":[{"start":{"line":158,"column":16},"end":{"line":160,"column":17}},{"start":{"line":158,"column":16},"end":{"line":160,"column":17}}],"line":158},"24":{"loc":{"start":{"line":161,"column":16},"end":{"line":163,"column":17}},"type":"if","locations":[{"start":{"line":161,"column":16},"end":{"line":163,"column":17}},{"start":{"line":161,"column":16},"end":{"line":163,"column":17}}],"line":161},"25":{"loc":{"start":{"line":164,"column":16},"end":{"line":166,"column":17}},"type":"if","locations":[{"start":{"line":164,"column":16},"end":{"line":166,"column":17}},{"start":{"line":164,"column":16},"end":{"line":166,"column":17}}],"line":164},"26":{"loc":{"start":{"line":171,"column":12},"end":{"line":179,"column":13}},"type":"if","locations":[{"start":{"line":171,"column":12},"end":{"line":179,"column":13}},{"start":{"line":171,"column":12},"end":{"line":179,"column":13}}],"line":171},"27":{"loc":{"start":{"line":171,"column":16},"end":{"line":171,"column":70}},"type":"binary-expr","locations":[{"start":{"line":171,"column":16},"end":{"line":171,"column":41}},{"start":{"line":171,"column":45},"end":{"line":171,"column":70}}],"line":171},"28":{"loc":{"start":{"line":174,"column":17},"end":{"line":179,"column":13}},"type":"if","locations":[{"start":{"line":174,"column":17},"end":{"line":179,"column":13}},{"start":{"line":174,"column":17},"end":{"line":179,"column":13}}],"line":174},"29":{"loc":{"start":{"line":187,"column":8},"end":{"line":197,"column":9}},"type":"if","locations":[{"start":{"line":187,"column":8},"end":{"line":197,"column":9}},{"start":{"line":187,"column":8},"end":{"line":197,"column":9}}],"line":187},"30":{"loc":{"start":{"line":188,"column":12},"end":{"line":193,"column":13}},"type":"if","locations":[{"start":{"line":188,"column":12},"end":{"line":193,"column":13}},{"start":{"line":188,"column":12},"end":{"line":193,"column":13}}],"line":188},"31":{"loc":{"start":{"line":202,"column":8},"end":{"line":210,"column":9}},"type":"if","locations":[{"start":{"line":202,"column":8},"end":{"line":210,"column":9}},{"start":{"line":202,"column":8},"end":{"line":210,"column":9}}],"line":202},"32":{"loc":{"start":{"line":202,"column":12},"end":{"line":202,"column":72}},"type":"binary-expr","locations":[{"start":{"line":202,"column":12},"end":{"line":202,"column":40}},{"start":{"line":202,"column":44},"end":{"line":202,"column":72}}],"line":202},"33":{"loc":{"start":{"line":205,"column":13},"end":{"line":210,"column":9}},"type":"if","locations":[{"start":{"line":205,"column":13},"end":{"line":210,"column":9}},{"start":{"line":205,"column":13},"end":{"line":210,"column":9}}],"line":205},"34":{"loc":{"start":{"line":215,"column":12},"end":{"line":217,"column":13}},"type":"if","locations":[{"start":{"line":215,"column":12},"end":{"line":217,"column":13}},{"start":{"line":215,"column":12},"end":{"line":217,"column":13}}],"line":215},"35":{"loc":{"start":{"line":218,"column":12},"end":{"line":220,"column":13}},"type":"if","locations":[{"start":{"line":218,"column":12},"end":{"line":220,"column":13}},{"start":{"line":218,"column":12},"end":{"line":220,"column":13}}],"line":218}},"s":{"0":1,"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":1,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":1,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0]},"inputSourceMap":{"version":3,"file":"/Users/yexuanjiang/project_team129/src/controller/queryEngine/Options.ts","sources":["/Users/yexuanjiang/project_team129/src/controller/queryEngine/Options.ts"],"names":[],"mappings":"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","sourcesContent":["import {InsightError} from \"../IInsightFacade\";\nimport {AnyKey, ApplyKey, MKey, SKey} from \"./Key\";\nimport {Query} from \"./Query\";\n\nexport class Options {\n\tpublic columns: Columns;\n\tpublic sort?: DirectionSort|DefaultSort;\n\n\t/**\n\t * construct an Options Object from raw json obj\n\t *\n\t * @param rawOptions parsed json object in the form of {' COLUMNS (', ' SORT)? '}\n\t *\n\t * @param query\n\t **/\n\tconstructor(rawOptions: any, query: Query) {\n\t\tlet ks;\n\t\ttry {\n\t\t\tks = Object.keys(rawOptions);\n\t\t} catch (e) {\n\t\t\tthrow new InsightError(\"options is null or undifined\");\n\t\t}\n\t\tconst len = ks.length;\n\n\t\tif (len < 1 || len > 2) {\n\t\t\tthrow new InsightError(\"OPTIONS should only have 1 or 2 key, has \" + len);\n\t\t}\n\n\t\tif (ks[0] !== \"COLUMNS\") {\n\t\t\tthrow new InsightError(\"1st key of OPTIONS should be COLUMNS, is \" + ks[0]);\n\t\t} else if (len === 2 && ks[1] !== \"ORDER\"){\n\t\t\tthrow new InsightError(\"2nd key of OPTIONS should be ORDER, is \" + ks[0]);\n\t\t}\n\n\t\tthis.columns = new Columns(rawOptions[\"COLUMNS\"], query);\n\t\tif (len === 2) {\n\t\t\tthis.sort = Sort.makeSort(rawOptions[\"ORDER\"], this.columns);\n\t\t}\n\t}\n\n\tpublic perform(filteredData: any[]): any[] {\n\t\tconst selectedData = this.columns.perform(filteredData);\n\t\tif (this.sort) {\n\t\t\tconst sortedData = this.sort.perform(selectedData);\n\t\t}\n\t\treturn selectedData;\n\t}\n}\n\nclass Columns {\n\tpublic columns: Array<SKey|MKey|ApplyKey>;\n\tpublic rawColumns: string[];\n\tpublic mapRawKey: Map<string, SKey|MKey|ApplyKey> = new Map<string, SKey|MKey|ApplyKey>();\n\tpublic query: Query;\n\n\t/**\n\t * construct a column instance from json\n\t *\n\t * @param rawColumns [' ANYKEY (',' ANYKEY)* ']\n\t *\n\t * @param query\n\t **/\n\tconstructor(rawColumns: any, query: Query) {\n\t\tlet columns: any[];\n\t\tif (Array.isArray(rawColumns)){\n\t\t\tcolumns = rawColumns;\n\t\t\tconst len = columns.length;\n\t\t\tif (len < 1) {\n\t\t\t\tthrow new InsightError(\"COLUMNS should have at least 1 element, has \" + len);\n\t\t\t}\n\t\t} else {\n\t\t\tthrow new InsightError(\"COLUMNS should be an array\");\n\t\t}\n\t\tcolumns.map((item) => {\n\t\t\tif (typeof item === \"string\") {\n\t\t\t\tthis.mapRawKey.set(item, AnyKey.makeAnyKey(item, query));\n\t\t\t} else {\n\t\t\t\tthrow new InsightError(\"column names should be string\");\n\t\t\t}\n\t\t});\n\t\tthis.rawColumns = Array.from(this.mapRawKey.keys());\n\t\tthis.columns = Array.from(this.mapRawKey.values());\n\t\tthis.query = query;\n\t}\n\n\tpublic perform(filteredData: any[]): any[] {\n\t\t// https://stackoverflow.com/questions/5072136/javascript-filter-for-objects\n\t\tconst loColNames = this.getColNames();\n\t\treturn filteredData.map(\n\t\t\t(item: any) => {\n\t\t\t\tconst entries = Object.entries(item).filter(([colName,value]) => {\n\t\t\t\t\treturn loColNames.includes(colName);\n\t\t\t\t});\n\t\t\t\treturn Object.fromEntries(entries);\n\t\t\t});\n\t}\n\n\tprivate getColNames(): string[] {\n\t\treturn this.columns.map((columnKey): string => {\n\t\t\t// console.log(instanceof columnKey)\n\t\t\tif (columnKey instanceof SKey || columnKey instanceof MKey) {\n\t\t\t\treturn columnKey.field;\n\t\t\t} else {\n\t\t\t\treturn columnKey.applyKey;\n\t\t\t}\n\t\t});\n\t}\n}\n\nabstract class Sort {\n\tprotected selected: Columns;\n\t/**\n\t * construct a sort instance from json\n\t *\n\t * @param rawSort\n\t * ('{ dir:'  DIRECTION ', keys: [ ' ANYKEY (',' ANYKEY)* ']}') | ANYKEY\n\t *\n\t * @param selected\n\t **/\n\tprotected constructor(rawSort: any, selected: Columns) {\n\t\tthis.selected = selected;\n\t}\n\n\tpublic static makeSort(rawSort: any, selected: Columns) {\n\t\tif (typeof rawSort === \"string\") {\n\t\t\treturn new DefaultSort(rawSort, selected);\n\t\t} else if ((typeof rawSort === \"object\")) {\n\t\t\treturn new DirectionSort(rawSort, selected);\n\t\t}\n\t}\n\n\tpublic abstract perform(selectedData: any[]): any[];\n}\n\nclass DirectionSort extends Sort {\n\tprivate static DIRECTION = /(UP)|(DOWN)/;\n\tpublic direction: string;\n\tpublic keys: Array<ApplyKey | SKey | MKey | undefined>;\n\n\tconstructor(rawSort: any, selected: Columns) {\n\t\tsuper(rawSort, selected);\n\t\tconst ks = Object.keys(rawSort);\n\t\tconst len = ks.length;\n\n\t\tif (len !== 2) {\n\t\t\tthrow new InsightError(\"Default Sort should have 2 keys, has \" + len);\n\t\t}\n\t\tif (ks[0] !== \"dir\") {\n\t\t\tthrow new InsightError(\"1st key of Defualt Sort should be 'dir', is \" + ks[0]);\n\t\t}\n\t\tif (ks[1] !== \"keys\") {\n\t\t\tthrow new InsightError(\"1st key of Defualt Sort should be 'keys', is \" + ks[1]);\n\t\t}\n\n\t\tconst dir = rawSort[\"dir\"];\n\t\tif (DirectionSort.DIRECTION.test(dir)) {\n\t\t\tthis.direction = dir;\n\t\t} else {\n\t\t\tthrow new InsightError(\"sort direction should be 'UP' or 'DOWN', is \" + dir);\n\t\t}\n\n\t\tlet lok: any[];\n\t\tif (Array.isArray(rawSort[\"keys\"])) {\n\t\t\tlok = rawSort[\"keys\"];\n\t\t\tif (lok.length < 1) {\n\t\t\t\tthrow new InsightError(\"should have at least 1 sort keys, has\" + lok.length);\n\t\t\t}\n\t\t} else {\n\t\t\tthrow new InsightError(\"sort keys should be an array\");\n\t\t}\n\t\tthis.keys = lok.map((rawAnyKey) => {\n\t\t\tif (typeof rawAnyKey === \"string\") {\n\t\t\t\t// if (selected.rawColumns.includes(rawAnyKey)) {\n\t\t\t\t// \treturn selected.mapRawKey.get(rawAnyKey);\n\t\t\t\t// } else {\n\t\t\t\t// \tthrow new InsightError(\"sort key must be in selected columns\");\n\t\t\t\t// }\n\t\t\t\tif (selected.mapRawKey.get(rawAnyKey) === undefined) {\n\t\t\t\t\tthrow new InsightError(\"sort key must be in selected columns\");\n\t\t\t\t} else {\n\t\t\t\t\treturn selected.mapRawKey.get(rawAnyKey);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthrow new InsightError(\"column names should be string\");\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic perform(selectedData: any[]): any[] {\n\t\tlet loSortBy = this.keys;\n\t\tlet loSortByColNames: string[];\n\t\tloSortByColNames = loSortBy.map(getSortKeys);\n\t\tlet sorted = selectedData.sort(compare);\n\n\t\tif (this.direction === \"DOWN\") {\n\t\t\tsorted = sorted.reverse();\n\t\t}\n\t\treturn sorted;\n\n\t\tfunction compare(i1: any, i2: any): number {\n\t\t\tlet i = 0;\n\t\t\twhile (i < loSortByColNames.length) {\n\t\t\t\tlet colName = loSortByColNames[i];\n\t\t\t\tlet val1: string | number = i1[colName];\n\t\t\t\tlet val2: string | number = i2[colName];\n\t\t\t\tif (val1 < val2) {\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\t\t\t\tif (val1 > val2) {\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\t\t\t\tif (val1 === val2) {\n\t\t\t\t\ti++;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn 0;\n\t\t}\n\n\t\tfunction getSortKeys(key: ApplyKey | SKey | MKey | undefined): string {\n\t\t\tif (key instanceof SKey || key instanceof MKey) {\n\t\t\t\treturn  key.field;\n\t\t\t} else if (key instanceof ApplyKey){\n\t\t\t\treturn key.applyKey;\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"unexpected\");\n\t\t\t}\n\t\t}\n\t}\n}\n\nclass DefaultSort extends Sort {\n\tpublic sortKey: SKey | MKey | ApplyKey | undefined;\n\tconstructor(rawSort: any, selected: Columns) {\n\t\tsuper(rawSort, selected);\n\t\tif (typeof rawSort === \"string\") {\n\t\t\tif (selected.mapRawKey.get(rawSort)) {\n\t\t\t\tthis.sortKey =  selected.mapRawKey.get(rawSort);\n\t\t\t} else {\n\t\t\t\tthrow new InsightError(\"sort key must be in selected columns\");\n\t\t\t}\n\t\t} else {\n\t\t\tthrow new InsightError(\"column name should be string\");\n\t\t}\n\t}\n\n\tpublic perform(selectedData: any[]): any[] {\n\t\tlet sortBy = this.sortKey;\n\t\tlet sortByColName: string;\n\t\tif (sortBy instanceof SKey || sortBy instanceof MKey) {\n\t\t\tsortByColName =  sortBy.field;\n\t\t} else if (sortBy instanceof ApplyKey){\n\t\t\tsortByColName = sortBy.applyKey;\n\t\t} else {\n\t\t\tthrow new Error(\"unexpected\");\n\t\t}\n\t\treturn selectedData.sort(compare);\n\t\tfunction compare(i1: any, i2: any): number {\n\t\t\tlet val1: string | number = i1[sortByColName];\n\t\t\tlet val2: string | number = i2[sortByColName];\n\t\t\tif (val1 < val2) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\tif (val1 > val2) {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\treturn 0;\n\t\t}\n\t}\n}\n\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"6393dade0a0e42c2d2ea4cc8f29e9981d2c20d78","contentHash":"d5f23fa01515d29076cc86676b2004a10f92412459ddae70fdef9a0ad5e5000e"}}